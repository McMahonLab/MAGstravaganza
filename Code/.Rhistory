#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig1 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.9)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1.6)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig1 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. Community Composition by 16S rRNA", "B. Community Composition by MAG coverage"), scale = 0.9)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1.6)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig1 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.9)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1.6)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig1 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.9.5)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1.6)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig1 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.95)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1.6)
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig1 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.85)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1.6)
panelB <- ggplot(data = agg_phyla, aes(x = phylum, y = RPKM, fill = Lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Normalized Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + theme(legend.text=element_text(size=12))
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig1 <- plot_grid(panelA, panelB, ncol = 1, align = "h", labels = c("A. 16S rRNA", "B. MAG coverage"), scale = 0.85)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1.6)
agg_TE_phyla
agg_TH_phyla
tag_data <- data.frame(phylum_names, phylum_percents, phylum_lake)
tag_data <- tag_data[which(tag_data$phylum_percents >= 1), ]
tag_data
table <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Data_files/marker_gene_table.txt", header = T, row.names = 1)
lakekey <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
lakerow <- as.character(lakekey$site[match(colnames(table), as.character(lakekey$sample))])
genedata <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Data_files/metabolic_gene_info.txt", fill = TRUE)
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("_", " ", table2keep$annotations)
table2keep$annotations <- factor(table2keep$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide quinone reductase" | plot.boxes$annotations == "sulfate adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide quinone reductase" & plot.boxes$annotations != "sulfate adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p1
p2
fig1 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 8, base_aspect_ratio = 1)
genes <- c("rubisco", "citrate lyase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
head(table)
head(TE_dates)
head(TE_raw_input)
TE_dates[which(TE_dates$sample == "IHPP")]
TE_dates[which(TE_dates$sample == "IHPP"), ]
head(table)
all_sizes <- rbind(Mendota_raw_input, TE_raw_input, TH_raw_input)
head(all_sizes)
tail(all_sizes)
all_sizes <- all_sizes[,c(2, 4)]
head(duplicated(all_sizes))
tail(duplicated(all_sizes))
all_sizes <- all_sizes[which(duplicated(all_sizes) == F), ]
size_vector <- all_sizes$V4[match(colnames(table), all_sizes$V2)]
size_vector
colnames(table)
colnames(table)[which(is.na(size.vector) == T)]
colnames(table)[which(is.na(size_vector) == T)]
table <- table[, which(is.na(size.vector) == F)]
table <- table[, which(is.na(size_vector) == F)]
table <- sweep(table, 2, size_vector, "/")
dim9table
size_vector <- size_vector[which(is.na(size_vector) == F)]
table <- sweep(table, 2, size_vector, "/")
table[1:10, 1:10]
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
#Sum by function and lake, then divide by number of metagenomes from each lake
#First combine categories that are variations of the same thing
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("_", " ", table2keep$annotations)
table2keep$annotations <- factor(table2keep$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide quinone reductase" | plot.boxes$annotations == "sulfate adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide quinone reductase" & plot.boxes$annotations != "sulfate adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
fig1 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
fig1
genes <- c("rubisco", "citrate lyase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip() + scale_y_log10()
ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip() + scale_y_continuous(limits = c(0, 0.00000000005))
ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip() + scale_y_continuous(limits = c(0, 0.00000000003))
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip() + scale_y_continuous(limits = c(0, 0.00000000003))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
mag_data <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/MAG_information.csv", header = T)
mag_data$Taxonomy <- as.character(mag_data$Taxonomy)
mag_data$Lake <- as.character(mag_data$Lake)
# Set up data frame to store results
gh_df <- mag_data[,c(1,3,4,10)]
gh_density <- c()
gh_diversity <- c()
tophit <- c()
tophit_counts <- c()
# Read in each MAG's CAZy results and store GH information
for(i in 1:dim(mag_data)[1]){
datafile <- read.table(paste("C:/Users/Goose and Gander/Desktop/MAGstravaganza/dbCAN_results/", mag_data$IMG_OID[i], ".txt", sep = ""))
hits <- sub(".hmm", "", datafile$V2)
types <- substr(hits, start = 1, stop = 2)
gh_hits <- hits[which(types == "GH")]
gh_density[i] <- length(gh_hits)/mag_data$Gene_Count[i]*100
gh_diversity[i] <- length(unique(gh_hits))
gh_counts <- table(gh_hits)
tophit[i] <- names(gh_counts)[which(gh_counts == max(gh_counts))]
tophit_counts[i] <- as.numeric(gh_counts[which(gh_counts == max(gh_counts))])
}
gh_df$Diversity <- gh_diversity
gh_df$Density <- gh_density
gh_df$TopGHHit <- tophit
gh_df$TopGHHit_Count <- tophit_counts
gh_df$Order <- sapply(strsplit(mag_data$Taxonomy, ";"), "[", 3)
gh_df$Order <- factor(gh_df$Order, levels = rev(c("Actinomycetales", "Chlamydiales", "Cytophagales", "Mycoplasmatales", "Planctomycetales", "Puniceicoccales", "Rhodocyclales", "Sphingomonadales", "Xanthomonadales", "Solibacterales", "Bdellovibrionales", "Chlorobiales", "Holophagales", "Rickettsiales", "Bacteroidales", "Campylobacterales", "Desulfobacterales", "Desulfuromonadales", "Gallionellales", "Ignavibacteriales", "Legionellales", "Nitrosomonadales", "Pseudomonadales", "Rhizobiales", "Solirubrobacterales", "Flavobacteriales", "Acidimicrobiales", "Burkholderiales", "Methylococcales", "Methylophilales", "Sphingobacteriales", "Verrucomicrobiales")))
warnings()
head(gh_df)
tail(gh_df)
head(datafile)
head(hits)
mag_data <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/MAG_information.csv", header = T)
mag_data$Taxonomy <- as.character(mag_data$Taxonomy)
mag_data$Lake <- as.character(mag_data$Lake)
# Set up data frame to store results
gh_df <- mag_data[,c(1,3,4,10)]
gh_density <- c()
gh_diversity <- c()
tophit <- c()
tophit_counts <- c()
endoglucanase <- c()
nag <- c()
glycosylase <- c()
other <- c()
# Read in each MAG's CAZy results and store GH information
for(i in 1:dim(mag_data)[1]){
datafile <- read.table(paste("C:/Users/Goose and Gander/Desktop/MAGstravaganza/dbCAN_results/", mag_data$IMG_OID[i], ".txt", sep = ""))
hits <- sub(".hmm", "", datafile$V2)
types <- substr(hits, start = 1, stop = 2)
gh_hits <- hits[which(types == "GH")]
gh_density[i] <- length(gh_hits)/mag_data$Gene_Count[i]*100
gh_diversity[i] <- length(unique(gh_hits))
gh_counts <- table(gh_hits)
tophit[i] <- names(gh_counts)[which(gh_counts == max(gh_counts))]
tophit_counts[i] <- as.numeric(gh_counts[which(gh_counts == max(gh_counts))])
endoglucanase[i] <- length(which(hits == "GH74"))
nag[i] <- length(which(hits == "GH109"))
glycosylase[i] <- length(which(hits == "GH23"))
other[i <- length(which(hits != "GH23" & hits != "GH109" & hits != "GH74"))]
}
gh_df$Diversity <- gh_diversity
gh_df$Density <- gh_density
gh_df$TopGHHit <- tophit
gh_df$TopGHHit_Count <- tophit_counts
gh_df$Endoglucanse <- endoglucanase
gh_df$Chitinase <- nag
gh_df$Transglycosylase <- glycosylase
gh_df$Other <- other
head(gh_df)
gh_df$Order <- sapply(strsplit(mag_data$Taxonomy, ";"), "[", 3)
gh_df$Order <- factor(gh_df$Order, levels = rev(c("Actinomycetales", "Chlamydiales", "Cytophagales", "Mycoplasmatales", "Planctomycetales", "Puniceicoccales", "Rhodocyclales", "Sphingomonadales", "Xanthomonadales", "Solibacterales", "Bdellovibrionales", "Chlorobiales", "Holophagales", "Rickettsiales", "Bacteroidales", "Campylobacterales", "Desulfobacterales", "Desulfuromonadales", "Gallionellales", "Ignavibacteriales", "Legionellales", "Nitrosomonadales", "Pseudomonadales", "Rhizobiales", "Solirubrobacterales", "Flavobacteriales", "Acidimicrobiales", "Burkholderiales", "Methylococcales", "Methylophilales", "Sphingobacteriales", "Verrucomicrobiales")))
# Output data at this stage for supplemental file
write.csv(gh_df, file = "C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/dbCANN_results.csv", quote = F, row.names = F)
# Plot the heatmap
gh.agg <- aggregate(Density ~ Lake + Order, data = gh_df, mean)
gh_density_plot <- ggplot(data = gh.agg[which(gh.agg$Order != "[Blank]" & is.na(gh.agg$Order) == F), ], aes(x = Lake, y = Order, fill = Density)) + geom_tile(color = "black") + scale_fill_gradient2(low = "white", mid = "#8c96c6", high = "#810f7c", midpoint = 4) + labs(x = "", y = "") + background_grid(major = "xy") + theme(axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/Fig3_panelA.pdf", gh_density_plot, base_height = 5, base_aspect_ratio = 0.5)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3_panelA.pdf", gh_density_plot, base_height = 5, base_aspect_ratio = 0.5)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3_panelA.pdf", gh_density_plot, base_height = 5, base_aspect_ratio = 0.75)
gh_density_plot <- ggplot(data = gh.agg[which(gh.agg$Order != "[Blank]" & is.na(gh.agg$Order) == F), ], aes(x = Lake, y = Order, fill = Density)) + geom_tile(color = "black") + scale_fill_gradient2(low = "white", mid = "#8c96c6", high = "#810f7c", midpoint = 4) + labs(x = "", y = "") + background_grid(major = "xy") + theme(axis.text.y = element_text(size = 10), axis.text.x = element_text(size = 10, angle = 45, hjust = 1))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3_panelA.pdf", gh_density_plot, base_height = 5, base_aspect_ratio = 0.75)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3_panelA.pdf", gh_density_plot, base_height = 5, base_aspect_ratio = 0.6)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3_panelA.pdf", gh_density_plot, base_height = 5, base_aspect_ratio = 0.65)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3_panelA.pdf", gh_density_plot, base_height = 5, base_aspect_ratio = 0.7)
# Correlation of density and diversity
cor.test(gh_df$Gene_Count, gh_df$Density)
panelB_data <- gh_df[which(gh_df$Lake == "Trout Bog Epilimnion"), ]
head(panelB_data)
panelB_data <- gh_df[which(gh_df$Lake == "Mendota"), ]
panelB_data <- panelB_data[which(panelB_data$Order == "Cytophagales" | panelB_data$Order == "Mycoplasmatales" | panelB_data$Order == "Planctomycetales" | panelB_data$Order == "Puniceicoccales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales")]
panelB_data <- panelB_data[which(panelB_data$Order == "Cytophagales" | panelB_data$Order == "Mycoplasmatales" | panelB_data$Order == "Planctomycetales" | panelB_data$Order == "Puniceicoccales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
mag_data <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/MAG_information.csv", header = T)
mag_data$Taxonomy <- as.character(mag_data$Taxonomy)
mag_data$Lake <- as.character(mag_data$Lake)
# Set up data frame to store results
gh_df <- mag_data[,c(1,3,4,10)]
gh_density <- c()
gh_diversity <- c()
tophit <- c()
tophit_counts <- c()
endoglucanase <- c()
nag <- c()
glycosylase <- c()
other <- c()
# Read in each MAG's CAZy results and store GH information
for(i in 1:dim(mag_data)[1]){
datafile <- read.table(paste("C:/Users/Goose and Gander/Desktop/MAGstravaganza/dbCAN_results/", mag_data$IMG_OID[i], ".txt", sep = ""))
hits <- sub(".hmm", "", datafile$V2)
types <- substr(hits, start = 1, stop = 2)
gh_hits <- hits[which(types == "GH")]
gh_density[i] <- length(gh_hits)/mag_data$Gene_Count[i]*100
gh_diversity[i] <- length(unique(gh_hits))
gh_counts <- table(gh_hits)
tophit[i] <- names(gh_counts)[which(gh_counts == max(gh_counts))]
tophit_counts[i] <- as.numeric(gh_counts[which(gh_counts == max(gh_counts))])
endoglucanase[i] <- length(which(hits == "GH74"))
nag[i] <- length(which(hits == "GH109"))
glycosylase[i] <- length(which(hits == "GH23"))
other[i <- length(which(hits != "GH23" & hits != "GH109" & hits != "GH74"))]
}
gh_df$Diversity <- gh_diversity
gh_df$Density <- gh_density
gh_df$TopGHHit <- tophit
gh_df$TopGHHit_Count <- tophit_counts
gh_df$Enzymes <- c(rep("GH74", length(endoglucanse)), rep("GH109", length(nag)), rep("GH23", length(glycosylase)), rep("other", length(other)))
gh_df$Enzyme_counts <- c(endoglucanase, nag, glycosylase, other)
gh_df$Order <- sapply(strsplit(mag_data$Taxonomy, ";"), "[", 3)
gh_df$Order <- factor(gh_df$Order, levels = rev(c("Actinomycetales", "Chlamydiales", "Cytophagales", "Mycoplasmatales", "Planctomycetales", "Puniceicoccales", "Rhodocyclales", "Sphingomonadales", "Xanthomonadales", "Solibacterales", "Bdellovibrionales", "Chlorobiales", "Holophagales", "Rickettsiales", "Bacteroidales", "Campylobacterales", "Desulfobacterales", "Desulfuromonadales", "Gallionellales", "Ignavibacteriales", "Legionellales", "Nitrosomonadales", "Pseudomonadales", "Rhizobiales", "Solirubrobacterales", "Flavobacteriales", "Acidimicrobiales", "Burkholderiales", "Methylococcales", "Methylophilales", "Sphingobacteriales", "Verrucomicrobiales")))
# Output data at this stage for supplemental file
write.csv(gh_df, file = "C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/dbCANN_results.csv", quote = F, row.names = F)
head(gh_df)
enzymes <- c(rep("GH74", length(endoglucanase)), rep("GH109", length(nag)), rep("GH23", length(glycosylase)), rep("other", length(other)))
enzyme_counts <- c(endoglucanase, nag, glycosylase, other)
mags <- rep(gh_df$IMG_OID, 4)
gh_profiles <- data.frame(mags, enzymes, enzyme_counts)
length(mags)
length(enzymes)
length(enzyme_counts)
dim(gh_df)
length(other)
length(endoglucanase)
mag_data <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/MAG_information.csv", header = T)
mag_data$Taxonomy <- as.character(mag_data$Taxonomy)
mag_data$Lake <- as.character(mag_data$Lake)
# Set up data frame to store results
gh_df <- mag_data[,c(1,3,4,10)]
gh_density <- c()
gh_diversity <- c()
tophit <- c()
tophit_counts <- c()
endoglucanase <- c()
nag <- c()
glycosylase <- c()
other <- c()
# Read in each MAG's CAZy results and store GH information
for(i in 1:dim(mag_data)[1]){
datafile <- read.table(paste("C:/Users/Goose and Gander/Desktop/MAGstravaganza/dbCAN_results/", mag_data$IMG_OID[i], ".txt", sep = ""))
hits <- sub(".hmm", "", datafile$V2)
types <- substr(hits, start = 1, stop = 2)
gh_hits <- hits[which(types == "GH")]
gh_density[i] <- length(gh_hits)/mag_data$Gene_Count[i]*100
gh_diversity[i] <- length(unique(gh_hits))
gh_counts <- table(gh_hits)
tophit[i] <- names(gh_counts)[which(gh_counts == max(gh_counts))]
tophit_counts[i] <- as.numeric(gh_counts[which(gh_counts == max(gh_counts))])
endoglucanase[i] <- length(which(hits == "GH74"))
nag[i] <- length(which(hits == "GH109"))
glycosylase[i] <- length(which(hits == "GH23"))
other[i] <- length(which(hits != "GH23" & hits != "GH109" & hits != "GH74"))
}
warnings()
gh_df$Diversity <- gh_diversity
gh_df$Density <- gh_density
gh_df$TopGHHit <- tophit
gh_df$TopGHHit_Count <- tophit_counts
enzymes <- c(rep("GH74", length(endoglucanase)), rep("GH109", length(nag)), rep("GH23", length(glycosylase)), rep("other", length(other)))
enzyme_counts <- c(endoglucanase, nag, glycosylase, other)
mags <- rep(gh_df$IMG_OID, 4)
gh_profiles <- data.frame(mags, enzymes, enzyme_counts)
head(gh_profiles)
gh_profiles$Order <- gh_df$Order[match(gh_profiles$mags, gh_df$IMG_OID)]
gh_profiles$Lake <- gh_df$Lake[match(gh_profiles$mags, gh_df$IMG_OID)]
head(gh_profiles)
match(gh_profiles$mags, gh_df$IMG_OID)
gh_df$Order[match(gh_profiles$mags, gh_df$IMG_OID)]
head(gh_df)
gh_df$Order <- sapply(strsplit(mag_data$Taxonomy, ";"), "[", 3)
gh_profiles$Order <- gh_df$Order[match(gh_profiles$mags, gh_df$IMG_OID)]
head(gh_df)
head(gh_profile)
head(gh_profiles)
panelB_data <- aggregate(enzyme_counts ~ Lake + Order + enzymes, data = gh_profiles, sum)
head(panelB_data)
ME_plot <- panelB_data[which(panelB_data$Order == "Cytophagales" | panelB_data$Order == "Mycoplasmatales" | panelB_data$Order == "Planctomycetales" | panelB_data$Order == "Puniceicoccales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
ggplot(ME_plot, aes(x = order, y = enzyme_counts, group = enzymes)) + geom_col(stat = "identity", position = "stacked")
ggplot(ME_plot, aes(x = order, y = enzyme_counts, group = enzymes)) + geom_col(stat = "identity")
ggplot(ME_plot, aes(x = order, y = enzyme_counts, group = enzymes)) + geom_col()
ME_plot
ME_plot <- ME_plot[which(ME_plot$Lake == "Mendota"), ]
ggplot(ME_plot, aes(x = order, y = enzyme_counts, group = enzymes)) + geom_col()
ggplot(ME_plot, aes(x = order, y = enzyme_counts, fill = enzymes)) + geom_col()
head(ME_plot)
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, group = enzymes)) + geom_col()
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col()
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill")
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip()
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + scale_x_reverse() + coord_flip()
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_y_reverse()
ME_plot$Order <- factor(ME_plot$Order, levels = rev(levels(ME_plot$Order)))
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip()
ME_plot <- panelB_data[which(panelB_data$Order == "Cytophagales" | panelB_data$Order == "Mycoplasmatales" | panelB_data$Order == "Planctomycetales" | panelB_data$Order == "Puniceicoccales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
ME_plot <- ME_plot[which(ME_plot$Lake == "Mendota"), ]
levels(ME_plot$Order
)
str(ME_plot)
ME_plot$Order <- factor(ME_plot$Order, levels = rev(c("Cytophagales", "Mycoplasmatales", "Planctomycetales", "Puniceicoccales", "Flavobacteriales", "Sphingobacteriales", "Verrucomicrobiales")))
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip()
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey"))
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(x = "Proportion of Enzyme Counts", y = NULL)
ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL)
TBE_plot <- panelB_data[which(panelB_data$Order == "Solibacterales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBE_plot$Order <- factor(TBE_plot$Order, levels = rev(c("Solibacterales", "Sphingobacteriales", "Verrucomicrobiales")))
panelB <- ggplot(TBE_plot, aes(x = Order, y = enzyme_counts, fill = enzyTBEs)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL)
panelB
panelB <- ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL)
panelC <- ggplot(TBE_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL)
panelC
TBE_plot <- panelB_data[which(panelB_data$Order == "Solibacterales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBE_plot <- TBE_plot[which(TBE_plot$Lake == "Trout Bog Epilimnion"), ]
TBE_plot$Order <- factor(TBE_plot$Order, levels = rev(c("Solibacterales", "Sphingobacteriales", "Verrucomicrobiales")))
ggplot(TBE_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL)
TBH_plot <- panelB_data[which(panelB_data$Order == "Bacteroidales" | panelB_data$Order == "Ignavibacteriales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBH_plot <- TBH_plot[which(TBH_plot$Lake == "Trout Bog Hypolimnion"), ]
TBH_plot$Order <- factor(TBH_plot$Order, levels = rev(c("Bacteroidales", "Ignavibacteriales", "Flavobacteriales", "Sphingobacteriales", "Verrucomicrobiales")))
ggplot(TBH_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL)
plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"))
panelB <- ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL)
part2_legend <- get_legend(panelB)
panelB <- panelB + theme(legend.position = "none")
TBE_plot <- panelB_data[which(panelB_data$Order == "Solibacterales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBE_plot <- TBE_plot[which(TBE_plot$Lake == "Trout Bog Epilimnion"), ]
TBE_plot$Order <- factor(TBE_plot$Order, levels = rev(c("Solibacterales", "Sphingobacteriales", "Verrucomicrobiales")))
panelC <- ggplot(TBE_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL) + theme(legend.position = "none")
TBH_plot <- panelB_data[which(panelB_data$Order == "Bacteroidales" | panelB_data$Order == "Ignavibacteriales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBH_plot <- TBH_plot[which(TBH_plot$Lake == "Trout Bog Hypolimnion"), ]
TBH_plot$Order <- factor(TBH_plot$Order, levels = rev(c("Bacteroidales", "Ignavibacteriales", "Flavobacteriales", "Sphingobacteriales", "Verrucomicrobiales")))
panelD <- ggplot(TBH_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL) + theme(legend.position = "none")
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"))
part2
panelB <- ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = NULL, x = NULL)
part2_legend <- get_legend(panelB)
panelB <- panelB + theme(legend.position = "none")
TBE_plot <- panelB_data[which(panelB_data$Order == "Solibacterales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBE_plot <- TBE_plot[which(TBE_plot$Lake == "Trout Bog Epilimnion"), ]
TBE_plot$Order <- factor(TBE_plot$Order, levels = rev(c("Solibacterales", "Sphingobacteriales", "Verrucomicrobiales")))
panelC <- ggplot(TBE_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = NULL, x = NULL) + theme(legend.position = "none")
TBH_plot <- panelB_data[which(panelB_data$Order == "Bacteroidales" | panelB_data$Order == "Ignavibacteriales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBH_plot <- TBH_plot[which(TBH_plot$Lake == "Trout Bog Hypolimnion"), ]
TBH_plot$Order <- factor(TBH_plot$Order, levels = rev(c("Bacteroidales", "Ignavibacteriales", "Flavobacteriales", "Sphingobacteriales", "Verrucomicrobiales")))
panelD <- ggplot(TBH_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL) + theme(legend.position = "none")
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"))
part2
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"), rel_heights = c(7, 3, 6))
part2
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"), rel_heights = c(7, 4, 6))
part2
plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B. Mendota", "C. TB Epilimnion", "D. TB Hypolimnion"), rel_heights = c(7, 4, 6))
panelB <- ggplot(ME_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = NULL, x = NULL, title = "Mendota")
part2_legend <- get_legend(panelB)
panelB <- panelB + theme(legend.position = "none")
TBE_plot <- panelB_data[which(panelB_data$Order == "Solibacterales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBE_plot <- TBE_plot[which(TBE_plot$Lake == "Trout Bog Epilimnion"), ]
TBE_plot$Order <- factor(TBE_plot$Order, levels = rev(c("Solibacterales", "Sphingobacteriales", "Verrucomicrobiales")))
panelC <- ggplot(TBE_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = NULL, x = NULL, title = "Trout Bog Epilimnion") + theme(legend.position = "none")
TBH_plot <- panelB_data[which(panelB_data$Order == "Bacteroidales" | panelB_data$Order == "Ignavibacteriales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBH_plot <- TBH_plot[which(TBH_plot$Lake == "Trout Bog Hypolimnion"), ]
TBH_plot$Order <- factor(TBH_plot$Order, levels = rev(c("Bacteroidales", "Ignavibacteriales", "Flavobacteriales", "Sphingobacteriales", "Verrucomicrobiales")))
panelD <- ggplot(TBH_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "Proportion of Enzyme Counts", x = NULL, title = "Trout Bog Hypolimnion") + theme(legend.position = "none")
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"), rel_heights = c(7, 4, 6))
part2
plot_grid(gh_density_plot, part2, part2_legend, ncol = 3)
plot_grid(gh_density_plot, part2, part2_legend, ncol = 3, rel_widths = c(1, 5, 1))
plot_grid(gh_density_plot, part2, part2_legend, ncol = 3, rel_widths = c(2, 5, 0.75))
plot_grid(gh_density_plot, part2, part2_legend, ncol = 3, rel_widths = c(2, 4, 0.75))
plot_grid(gh_density_plot, part2, part2_legend, ncol = 3, rel_widths = c(1, 4, 0.75))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 4, base_aspect_ratio = 2)
fig3 <- plot_grid(gh_density_plot, part2, part2_legend, ncol = 3, rel_widths = c(2, 5, 1))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 4, base_aspect_ratio = 2)
fig3 <- plot_grid(gh_density_plot, part2, part2_legend, ncol = 3, rel_widths = c(3, 5, 1))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 4, base_aspect_ratio = 2)
fig3 <- plot_grid(gh_density_plot, part2, part2_legend, ncol = 3, rel_widths = c(5, 5, 1))
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 4, base_aspect_ratio = 2)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 6, base_aspect_ratio = 2)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 6, base_aspect_ratio = 1.5)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 6, base_aspect_ratio = 1.25)
fig3 <- plot_grid(gh_density_plot, part2, labels = c("A", ""), ncol = 2)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 6, base_aspect_ratio = 1.25)
panelD <- ggplot(TBH_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "% Enzyme Counts", x = NULL, title = "Trout Bog Hypolimnion") + theme(legend.position = "none")
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"), rel_heights = c(7, 4, 6))
fig3 <- plot_grid(gh_density_plot, part2, labels = c("A", ""), ncol = 2)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 6, base_aspect_ratio = 1.25)
panelB <- ggplot(ME_plot, aes(x = Order, y = enzyme_counts*100, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = NULL, x = NULL, title = "Mendota")
part2_legend <- get_legend(panelB)
panelB <- panelB + theme(legend.position = "none")
TBE_plot <- panelB_data[which(panelB_data$Order == "Solibacterales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBE_plot <- TBE_plot[which(TBE_plot$Lake == "Trout Bog Epilimnion"), ]
TBE_plot$Order <- factor(TBE_plot$Order, levels = rev(c("Solibacterales", "Sphingobacteriales", "Verrucomicrobiales")))
panelC <- ggplot(TBE_plot, aes(x = Order, y = enzyme_counts*100, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = NULL, x = NULL, title = "Trout Bog Epilimnion") + theme(legend.position = "none")
TBH_plot <- panelB_data[which(panelB_data$Order == "Bacteroidales" | panelB_data$Order == "Ignavibacteriales" | panelB_data$Order == "Flavobacteriales" | panelB_data$Order == "Sphingobacteriales" | panelB_data$Order == "Verrucomicrobiales"), ]
TBH_plot <- TBH_plot[which(TBH_plot$Lake == "Trout Bog Hypolimnion"), ]
TBH_plot$Order <- factor(TBH_plot$Order, levels = rev(c("Bacteroidales", "Ignavibacteriales", "Flavobacteriales", "Sphingobacteriales", "Verrucomicrobiales")))
panelD <- ggplot(TBH_plot, aes(x = Order, y = enzyme_counts*100, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "% Enzyme Counts", x = NULL, title = "Trout Bog Hypolimnion") + theme(legend.position = "none")
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"), rel_heights = c(7, 4, 6))
# Put it all together
fig3 <- plot_grid(gh_density_plot, part2, labels = c("A", ""), ncol = 2)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 6, base_aspect_ratio = 1.25)
panelD
panelD <- ggplot(TBH_plot, aes(x = Order, y = enzyme_counts, fill = enzymes)) + geom_col(position = "fill") + coord_flip() + scale_fill_manual(values = c("#fb9a99", "#e31a1c", "#fdbf6f", "grey")) + labs(y = "GH Proportion", x = NULL, title = "Trout Bog Hypolimnion") + theme(legend.position = "none")
part2 <- plot_grid(panelB, panelC, panelD, nrow = 3, labels = c("B", "C", "D"), rel_heights = c(7, 4, 6))
fig3 <- plot_grid(gh_density_plot, part2, labels = c("A", ""), ncol = 2)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/Fig3.pdf", fig3, base_height = 6, base_aspect_ratio = 1.25)
# Correlation of density and diversity
cor.test(gh_df$Gene_Count, gh_df$Density)
