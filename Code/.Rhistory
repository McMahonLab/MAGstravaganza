hits <- grep("Urea", counts$Product)
pathway[hits] <- "Urea Degradation"
hits <- grep("chrome c", counts$Product)
pathway[hits] <- "Cytochrome C"
hits <- grep("chrome bd", counts$Product)
pathway[hits] <- "Cytochrome bd"
unique(counts$Product[which(is.na(pathway) == T)])
hits <- grep("Cbb3", counts$Product)
pathway[hits] <- "Cytochrome Oxidase cbb3-type"
unique(counts$Product[which(is.na(pathway) == T)])
counts$Pathway <- pathway
head(counts)
head(mendota)
all_lengths <- rbind(mendota[,c(1,2)], tbe[,c(1,2)], tbh[,c(1,2)])
head(all_lengths)
counts$metaSize <- all_lengths$reads[match(counts$Var2, all_lengths$sample)]
# Convert to RPKM - general form: RPKM =   numReads / ( genomeLength/1000 * totalNumReads/1,000,000 )
counts$RPKM <- counts$value / (counts$GeneID/1000 * counts$metaSize/1000000)
head(counts)
pathway_rpkm <- aggregate(RPKM ~ Lake + Pathway, data = counts, sum)
pathway_rpkm
library(ggplot2)
library(cowplot)
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, group = Lake)) + geom_bar(stat = "identity", positon = "dodge")
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge")
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + scale_y_log10() + coord_flip()
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
pathway_rpkm <- aggregate(RPKM ~ Lake + Pathway, data = counts, mean)
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
pathway_rpkm <- aggregate(RPKM ~ Lake + Pathway, data = counts, sum)
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
hits <- grep("aa3", counts$Product)
pathway[hits] <- "Cytochrome Oxidase aa3-type"
counts$Pathway <- pathway
pathway_rpkm <- aggregate(RPKM ~ Lake + Pathway, data = counts, sum)
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
# Divide RPKM counts by the number of metagenomes per lake layer
pathway_rpkm$RPKM[which(pathway_rpkm$Lake == "ME_epi")] <- pathway_rpkm$RPKM[which(pathway_rpkm$Lake == "ME_epi")] / 94
pathway_rpkm$RPKM[which(pathway_rpkm$Lake == "ME_epi")] <- pathway_rpkm$RPKM[which(pathway_rpkm$Lake == "TB_epi")] / 45
pathway_rpkm$RPKM[which(pathway_rpkm$Lake == "ME_epi")] <- pathway_rpkm$RPKM[which(pathway_rpkm$Lake == "TB_hypo")] / 45
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
pathway_rpkm <- aggregate(RPKM ~ Lake + Pathway, data = counts, sum)
ggplot(pathway_rpkm, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + coord_flip()
bars <- unique(pathway_rpkm$Pathway)
i=5
me_amount <- pathway_rpkm$RPKM[which(pathway_rpkm$Lake == "ME_epi" & pathway_rpkm$Pathway == bars[i])]
me_amount
bars[i]
pathway_rpkm$Pathway == bars[i]
pathway_rpkm$Lake == "ME_epi"
pathway_rpkm
pathway_rpkm2 <- pathway_rpkm[c(1:6, 18:32, 40:72),]
bars <- unique(pathway_rpkm2$Pathway)
me_amount <- pathway_rpkm2$RPKM[which(pathway_rpkm2$Lake == "ME_epi" & pathway_rpkm2$Pathway == bars[i])]
ratio <- 1/me_amount
ratio
ratio*me_amount
for(i in 1:length(bars)){
me_amount <- pathway_rpkm2$RPKM[which(pathway_rpkm2$Lake == "ME_epi" & pathway_rpkm2$Pathway == bars[i])]
ratio <- 1/me_amount
pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])] <- pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])] * ratio
}
ggplot(pathway_rpkm2, aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + coord_flip()
bars
i=14
pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])]
pathway_rpkm2 <- pathway_rpkm[c(1:6, 18:32, 40:72),]
pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])]
ggplot(pathway_rpkm2[which(pathway_rpkm$Pathway != "Sulfide Reduction"),], aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + coord_flip()
ggplot(pathway_rpkm2[which(pathway_rpkm2$Pathway != "Sulfide Reduction"),], aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + coord_flip()
pathway_rpkm2 <- pathway_rpkm[c(1:6, 18:32, 40:72),]
bars <- unique(pathway_rpkm2$Pathway)
for(i in 1:length(bars)){
me_amount <- pathway_rpkm2$RPKM[which(pathway_rpkm2$Lake == "ME_epi" & pathway_rpkm2$Pathway == bars[i])]
ratio <- 1/me_amount
pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])] <- pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])] * ratio
}
ggplot(pathway_rpkm2[which(pathway_rpkm2$Pathway != "Sulfide Reduction"),], aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + coord_flip()
ggplot(pathway_rpkm2[which(pathway_rpkm2$Pathway != "Sulfide Reduction"),], aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + scale_y_log10() + coord_flip()
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/blast_results.pdf", x, base_height = 8, base_aspect_ratio = 1)
x <- ggplot(pathway_rpkm2[which(pathway_rpkm2$Pathway != "Sulfide Reduction"),], aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + scale_y_log10() + coord_flip()
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/blast_results.pdf", x, base_height = 8, base_aspect_ratio = 1)
pathway_rpkm <- aggregate(RPKM ~ Lake + Pathway, data = counts, mean)
pathway_rpkm2 <- pathway_rpkm[c(1:6, 18:32, 40:72),]
bars <- unique(pathway_rpkm2$Pathway)
for(i in 1:length(bars)){
me_amount <- pathway_rpkm2$RPKM[which(pathway_rpkm2$Lake == "ME_epi" & pathway_rpkm2$Pathway == bars[i])]
ratio <- 1/me_amount
pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])] <- pathway_rpkm2$RPKM[which(pathway_rpkm2$Pathway == bars[i])] * ratio
}
ggplot(pathway_rpkm2[which(pathway_rpkm2$Pathway != "Sulfide Reduction"),], aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + scale_y_log10() + coord_flip()
x <- ggplot(pathway_rpkm2[which(pathway_rpkm2$Pathway != "Sulfide Reduction"),], aes(x = Pathway, y = RPKM, fill = Lake)) + geom_bar(stat = "identity", position = "dodge") + labs(y = "Normalized RPKM") + scale_y_log10() + coord_flip()
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/blast_results.pdf", x, base_height = 8, base_aspect_ratio = 1)
library(reshape2)
blast_results <- read.table(file = "D:/pid80_results.txt", header = F)
colnames(blast_results) <- c("GeneID", "PID", "metagenome")
blast_results$metagenome <- gsub(".len150", "", blast_results$metagenome)
blast_results$metagenome <- gsub("IHSC1", "IHSC2", blast_results$metagenome)
# Load the gene names that go with the IDs
fasta_headers <- read.csv(file = "D:/fastaheaders_to_blast.csv", header = T)
mendota <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/ME.sampledata.filtered.tsv", sep = "\t", header = T)
tbe <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/tb_epi.sample_data.filtered.txt", header = T, sep = "\t")
tbh <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/tb_hyp.sample_data.filtered.txt", header = T, sep = "\t")
all_lengths <- rbind(mendota[,c(1,2)], tbe[,c(1,2)], tbh[,c(1,2)])
lakekey <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
blast_results$Lake <- lakekey$site[match(blast_results$metagenome, lakekey$sample)]
counts <- table(GeneID = blast_results$GeneID, blast_results$metagenome)
counts <- melt(counts)
counts <- counts[which(counts$value > 0),]
#I need to normalize counts by metagenome size and gene size.
counts$GeneLength <- fasta_headers$Length[match(counts$GeneID, fasta_headers$GeneID)]
counts$metaSize <- all_lengths$reads[match(counts$Var2, all_lengths$sample)]
# Convert to RPKM - general form: RPKM =   numReads / ( genomeLength/1000 * totalNumReads/1,000,000 )
counts$RPKM <- counts$value / (counts$GeneID/1000 * counts$metaSize/1000000)
# Add the lake info for each metagenome
counts$Lake <- lakekey$site[match(counts$Var2, lakekey$sample)]
# Add product info
counts$Product <- fasta_headers$Product[match(counts$GeneID, fasta_headers$GeneID)]
# The hard part - linking product back to pathway
pathway <- rep(NA, dim(counts)[1])
hits <- grep("carboxylase", counts$Product)
pathway[hits] <- "CBB Cycle"
hits <- grep("lyase", counts$Product)
pathway[hits] <- "rTCA Cycle"
hits <- grep("rhodopsin", counts$Product)
pathway[hits] <- "Rhodopsin"
hits <- grep("aa3", counts$Product)
pathway[hits] <- "Cytochrome Oxidase aa3-type"
hits <- grep("cbb3", counts$Product)
pathway[hits] <- "Cytochrome Oxidase cbb3-type"
hits <- grep("Cbb3", counts$Product)
pathway[hits] <- "Cytochrome Oxidase cbb3-type"
hits <- grep("oxidase d", counts$Product)
pathway[hits] <- "Cytochrome Oxidase d"
hits <- grep("Fe-hydrogenase III", counts$Product)
pathway[hits] <- "Ni,Fe-hydrogenase III"
hits <- grep("Fe-hydrogenase I ", counts$Product)
pathway[hits] <- "Ni,Fe-hydrogenase I or II"
hits <- grep("Fe-hydrogenase 1 ", counts$Product)
pathway[hits] <- "Ni,Fe-hydrogenase I or II"
hits <- grep("Fe-hydrogenase 2 ", counts$Product)
pathway[hits] <- "Ni,Fe-hydrogenase I or II"
hits <- grep("rhamnulose", counts$Product)
pathway[hits] <- "Rhamnose Degradation"
hits <- grep("fuculose", counts$Product)
pathway[hits] <- "Fucose Degradation"
hits <- grep("Fuculose", counts$Product)
pathway[hits] <- "Fucose Degradation"
hits <- grep("ribulokinase", counts$Product)
pathway[hits] <- "Arabinose Degradation"
hits <- grep("aldose 1-epimerase", counts$Product)
pathway[hits] <- "Galactose Degradation"
hits <- grep("Aldose 1-epimerase", counts$Product)
pathway[hits] <- "Galactose Degradation"
hits <- grep("mannose-6-phosphate", counts$Product)
pathway[hits] <- "Mannose Degradation"
hits <- grep("xylose isomerase", counts$Product)
pathway[hits] <- "Xylose Degradation"
hits <- grep("methanol", counts$Product)
pathway[hits] <- "Methanol Degradation"
hits <- grep("nitrogenase", counts$Product)
pathway[hits] <- "Nitrogen Fixation"
hits <- grep("Nitrogenase", counts$Product)
pathway[hits] <- "Nitrogen Fixation"
hits <- grep("putrescine", counts$Product)
pathway[hits] <- "Putrescine Degradation"
hits <- grep("nitrite", counts$Product)
pathway[hits] <- "Dissimilatory Nitrate Reduction"
hits <- grep("nitric oxide", counts$Product)
pathway[hits] <- "Denitrification"
hits <- grep("quinone", counts$Product)
pathway[hits] <- "Sulfide Oxidation"
hits <- grep("flavocytochrome", counts$Product)
pathway[hits] <- "Sulfide Oxidation"
hits <- grep("Flavocytochrome", counts$Product)
pathway[hits] <- "Sulfide Oxidation"
hits <- grep("sulfite reductase", counts$Product)
pathway[hits] <- "Sulfide Reduction"
hits <- grep("Sox", counts$Product)
pathway[hits] <- "Sulfur Oxidation"
hits <- grep("sulfate adenylyltransferase", counts$Product)
pathway[hits] <- "Sulfite Oxidation"
hits <- grep("phosphosulfate reductase", counts$Product)
pathway[hits] <- "Sulfite Oxidation"
hits <- grep("urea", counts$Product)
pathway[hits] <- "Urea Degradation"
hits <- grep("Urea", counts$Product)
pathway[hits] <- "Urea Degradation"
hits <- grep("chrome c", counts$Product)
pathway[hits] <- "Cytochrome C"
hits <- grep("chrome bd", counts$Product)
pathway[hits] <- "Cytochrome bd"
counts$Pathway <- pathway
head(counts)
lefse_input <- dcast(counts, GeneID + Var2 ~ RPKM)
lefse_input <- dcast(counts[,c(1,2,6)], GeneID + Var2 ~ RPKM)
lefse_input <- dcast(counts[,c(1,2,6)], Product + Var2 ~ RPKM)
hits <- grep("chrome bd", counts$Product)
lefse_input <- dcast(counts, Product + Var2 ~ RPKM)
# Aggregate by product and reshape counts back to wide to input into Lefse
product_rpkm <- aggregate(RPKM ~ Lake + Product, data = counts, mean)
head(product_rpkm)
# Aggregate by product and reshape counts back to wide to input into Lefse
product_rpkm <- aggregate(RPKM ~ Var2 + Product, data = counts, mean)
head(product_rpkm)
lefse_input <- dcast(product_rpkm, Var2 + Product ~ RPKM)
lefse_input[1:10, 1:10]
lefse_input <- dcast(product_rpkm, Product ~ RPKM + Var2)
lefse_input[1:10, 1:10]
lefse_input <- dcast(product_rpkm, Product ~ Var2)
lefse_input[1:10, 1:10]
lefse_input[which(is.na(lefse_input) == T)] <- 0
dim(lefse_input)
lefse_input[i, which(is.na(lefse_input[i,]) == T)]
i = 2
lefse_input[i, which(is.na(lefse_input[i,]) == T)]
row <- lefse_input[i,]
row[which(is.na(row) == T)] <- 0
row
row <- lefse_input[i,]
which(is.na(row) == T)
row[60:65]
row[which(is.na(row) == T)] <- 0
row[60:65]
for (i in 1:dim(lefse_input)[1]){
row <- lefse_input[i,]
row[which(is.na(row) == T)] <- 0
lefse_input[i,] <- row
}
lefse_input[1:10, 1:10]
head(lakekey)
# Add a 1st colum of the lake for each metagenome
# Make products a row
rownames(lefse_input) < lefse_input[,1]
# Add a 1st colum of the lake for each metagenome
# Make products a row
rownames(lefse_input) <- lefse_input[,1]
lefse_input <- lefse_input[,2:165]
lefse_input[1:10, 1:10]
lakerow <- c("lake", lakekey$Site[match(colnames(lefse_input), lakekey$sample)])
lakerow
lakekey$Site[match(colnames(lefse_input), lakekey$sample)]
colnames(lefse_input)
lakekey$sample
c("lake", lakekey$Site[match(colnames(lefse_input), as.character(lakekey$sample))])
match(colnames(lefse_input), as.character(lakekey$sample))
lakekey$Site[match(colnames(lefse_input), as.character(lakekey$sample))]
lakekey$site[match(colnames(lefse_input), as.character(lakekey$sample))
]
c("lake", lakekey$site[match(colnames(lefse_input), as.character(lakekey$sample))])
c("lake", as.character(lakekey$site[match(colnames(lefse_input), as.character(lakekey$sample))]))
lakerow <- c("lake", as.character(lakekey$site[match(colnames(lefse_input), as.character(lakekey$sample))]))
lakerow <- as.character(lakekey$site[match(colnames(lefse_input), as.character(lakekey$sample))])
lefse_input <- rbind(lakerow, lefse_input)
lefse_input[1:10, 1:10]
# Output
write.table(lefse_input, file = "C:/Users/Alex/Desktop/MAGstravaganza/Data_files/lefse_input.txt", quote = F, row.names = T, col.names = T)
rownames(lefse_input) <- gsub(" ", "_", rownames(lefse_input))
lefse_input[1:10, 1:10]
# Output
write.table(lefse_input, file = "C:/Users/Alex/Desktop/MAGstravaganza/Data_files/lefse_input.txt", quote = F, row.names = T, col.names = T)
# Output
write.table(lefse_input, file = "C:/Users/Alex/Desktop/MAGstravaganza/Data_files/lefse_input.txt", quote = F, row.names = T, col.names = T, sep = "\t")
lefse_input <- dcast(pathway_rpkm, Pathway ~ Var2)
pathway_rpkm <- aggregate(RPKM ~ Lake + Pathway, data = counts, mean)
lefse_input <- dcast(pathway_rpkm, Pathway ~ Var2)
head(pathway_rpkm)
lefse_input <- dcast(pathway_rpkm, Pathway ~ Lake)
head(lefse_input)
pathway_rpkm <- aggregate(RPKM ~ Var2 + Pathway, data = counts, mean)
lefse_input <- dcast(pathway_rpkm, Pathway ~ Var2)
head(lefse_input)
for (i in 1:dim(lefse_input)[1]){
row <- lefse_input[i,]
row[which(is.na(row) == T)] <- 0
lefse_input[i,] <- row
}
rownames(lefse_input) <- lefse_input[,1]
rownames(lefse_input) <- gsub(" ", "_", rownames(lefse_input))
lefse_input <- lefse_input[,2:165]
lakerow <- as.character(lakekey$site[match(colnames(lefse_input), as.character(lakekey$sample))])
lefse_input <- rbind(lakerow, lefse_input)
lefse_input[1:10, 1:10]
# Output
write.table(lefse_input, file = "C:/Users/Alex/Desktop/MAGstravaganza/Data_files/lefse_input.txt", quote = F, row.names = T, col.names = T, sep = "\t")
snorm <- read.csv("D:/geodes_data_tables/Sparkling_normalized.csv", header = T, row.names = 1)
tnorm <- read.csv("D:/geodes_data_tables/Trout_normalized.csv", header = T, row.names = 1)
mnorm <- read.csv("D:/geodes_data_tables/Mendota_normalized.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
cf_genes <- mendota_key[, grep("Chloroflexi", mendota_key$Taxonomy)
]
grep("Chloroflexi", mendota_key$Taxonomy)
cf_genes <- mendota_key[grep("Chloroflexi", mendota_key$Taxonomy), ]
head(cf_genes)
unique(cf_genes$Genome)
cf_genes$Counts <- rowSums(mnorm)[match(cf_genes$Gene, rownames(mnorm))]
head(cf_genes)
cf_genes <- cf_genes[order(cf_genes$Counts, decreasing = T), ]
head(cf_genes)
mendota_key[grep("Ga0164293_10271681", mendota_key$Gene), ]
mendota_key[grep("Ga0164293_1027168", mendota_key$Gene), ]
mendota_key$Taxonomy <- gsub("Bacteria;", "", mendota_key$Taxonomy)
mendota_key$Taxonomy <- gsub("Eukaryota;", "", mendota_key$Taxonomy)
mendota_key$Phylum <- sapply(strsplit(as.character(mendota_key$Taxonomy),";"), `[`, 1)
mnorm$Genes <- rownames(mnorm)
mnorm <- melt(mnorm)
mnorm$Timepoint <- metadata$Timepoint[match(mnorm$variable, metadata$Sample)]
mnorm$Taxonomy <- mendota_key$Phylum[match(mnorm$Genes, mendota_key$Gene)]
mnorm$Taxonomy <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION MH", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION LP", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("None", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified Oligohymenophorea", "Ciliophora", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified Pelagophyceae", "Ochrophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Unclassified ", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("UnclassifiedIsochrysidales", "Haptophyta", mnorm$Taxonomy)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = mnorm, mean)
wide_mnorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_mnorm) <- wide_mnorm$Taxonomy
wide_mnorm <- wide_mnorm[, 2:dim(wide_mnorm)[2]]
wide_mnorm <- wide_mnorm[which(rowSums(wide_mnorm) > 3000),]
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
head(averaged_tax)
mnorm[1:10, 1:10]
mnorm <- read.csv("D:/geodes_data_tables/Mendota_normalized.csv", header = T, row.names = 1)
# How expressed is each phylum?
mendota_key$Taxonomy <- gsub("Bacteria;", "", mendota_key$Taxonomy)
mendota_key$Taxonomy <- gsub("Eukaryota;", "", mendota_key$Taxonomy)
mendota_key$Phylum <- sapply(strsplit(as.character(mendota_key$Taxonomy),";"), `[`, 1)
mnorm$Genes <- rownames(mnorm)
mnorm <- melt(mnorm)
mnorm$Timepoint <- metadata$Timepoint[match(mnorm$variable, metadata$Sample)]
mnorm$Taxonomy <- mendota_key$Phylum[match(mnorm$Genes, mendota_key$Gene)]
### Load packages
library(ggplot2)
library(cowplot)
library(reshape2)
mnorm <- read.csv("D:/geodes_data_tables/Mendota_normalized.csv", header = T, row.names = 1)
mendota_key$Taxonomy <- gsub("Bacteria;", "", mendota_key$Taxonomy)
mendota_key$Taxonomy <- gsub("Eukaryota;", "", mendota_key$Taxonomy)
mendota_key$Phylum <- sapply(strsplit(as.character(mendota_key$Taxonomy),";"), `[`, 1)
mnorm$Genes <- rownames(mnorm)
mnorm <- melt(mnorm)
mnorm$Timepoint <- metadata$Timepoint[match(mnorm$variable, metadata$Sample)]
mnorm$Taxonomy <- mendota_key$Phylum[match(mnorm$Genes, mendota_key$Gene)]
mnorm$Taxonomy <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION MH", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION LP", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("None", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified Oligohymenophorea", "Ciliophora", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified Pelagophyceae", "Ochrophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Unclassified ", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("UnclassifiedIsochrysidales", "Haptophyta", mnorm$Taxonomy)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = mnorm, mean)
wide_mnorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_mnorm) <- wide_mnorm$Taxonomy
wide_mnorm <- wide_mnorm[, 2:dim(wide_mnorm)[2]]
wide_mnorm <- wide_mnorm[which(rowSums(wide_mnorm) > 3000),]
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
mendota_phyla
grep("Perkins", mendota_key$Taxonomy)
grep("Ignavi", mendota_key$Taxonomy)
wide_mnorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_mnorm) <- wide_mnorm$Taxonomy
wide_mnorm <- wide_mnorm[, 2:dim(wide_mnorm)[2]]
head(wide_mnorm)
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
mendota_phyla
grep("Streptophyta", mendota_key$Taxonomy)
# Gene keys
mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
grep("Streptophyta", mendota_key$Taxonomy)
grep("Streptophyta", spark_key$Taxonomy)
# Gene keys
oldmendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified.csv", header = T)
# Gene keys
oldmendota_key <- read.csv("D:/geodes_data_tables/oldMendota_ID90_genekey_reclassified.csv", header = T)
grep("Streptophyta", oldmendota_key$Taxonomy)
oldmendota_key[grep("Streptophyta", oldmendota_key$Taxonomy),]
oldmendota_key[grep("Perkins", oldmendota_key$Taxonomy),]
oldmendota_key[grep("Ignavi", oldmendota_key$Taxonomy),]
mendota_key[grep("Chloroflexi", mendota_key$Taxonomy),]
length(grep("Chloroflexi", mendota_key$Taxonomy))
mendota_key[grep("cytochrome c oxidase", mendota_key$Product),]
library(ggplot2)
library(cowplot)
library(reshape2)
#library(GeneCycle)
### Load data (start with only one to save RAM and comment the rest out)
# Normalized read tables
snorm <- read.csv("D:/geodes_data_tables/Sparkling_ID90_normalized_readcounts.csv", header = T, row.names = 1)
tnorm <- read.csv("D:/geodes_data_tables/Trout_ID90_normalized_readcounts.csv", header = T, row.names = 1)
mnorm <- read.csv("D:/geodes_data_tables/Mendota_ID90_normalized_readcounts.csv", header = T, row.names = 1)
# Gene keys
mendota_key <- read.csv("D:/geodes_data_tables/Mendota_ID90_genekey_reclassified_2018-03-03.csv", header = T)
spark_key <- read.csv("D:/geodes_data_tables/Sparkling_ID90_genekey_reclassified_2018-03-03.csv", header = T)
trout_key <- read.csv("D:/geodes_data_tables/Trout_ID90_genekey_reclassified_2018-03-03.csv", header = T)
# Sample data
metadata <- read.csv(file = "C:/Users/Alex/Desktop/geodes/bioinformatics_workflow/R_processing/sample_metadata.csv", header = T)
# How expressed is each phylum?
mendota_key$Taxonomy <- gsub("Bacteria;", "", mendota_key$Taxonomy)
mendota_key$Taxonomy <- gsub("Eukaryota;", "", mendota_key$Taxonomy)
mendota_key$Phylum <- sapply(strsplit(as.character(mendota_key$Taxonomy),";"), `[`, 1)
mnorm$Genes <- rownames(mnorm)
mnorm <- melt(mnorm)
mnorm$Timepoint <- metadata$Timepoint[match(mnorm$variable, metadata$Sample)]
mnorm$Taxonomy <- mendota_key$Phylum[match(mnorm$Genes, mendota_key$Gene)]
mnorm$Taxonomy <- gsub("Cryptophyta,Cryptophyceae,Pyrenomonadales,Geminigeraceae,Guillardia,theta", "Cryptophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Haptophyta,Prymnesiophyceae,Isochrysidales,Noelaerhabdaceae,Emiliania,huxleyi", "Haptophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Heterokonta,Coscinodiscophyceae,Thalassiosirales,Thalassiosiraceae,Thalassiosira,pseudonana", "Heterokonta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Heterokonta,Pelagophyceae,Pelagomonadales,Pelagomonadaceae,Aureococcus,anophagefferens", "Heterokonta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified unclassified unclassified unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION MH", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION LP", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("NO CLASSIFICATION DUE TO FEW HITS IN PHYLODIST", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("None", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified Perkinsida", "Perkinsozoa", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified Oligohymenophorea", "Ciliophora", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified Pelagophyceae", "Ochrophyta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("unclassified", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Unclassified ", "Unclassified", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("UnclassifiedIsochrysidales", "Haptophyta", mnorm$Taxonomy)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = mnorm, mean)
wide_mnorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_mnorm) <- wide_mnorm$Taxonomy
wide_mnorm <- wide_mnorm[, 2:dim(wide_mnorm)[2]]
wide_mnorm <- wide_mnorm[which(rowSums(wide_mnorm) > 3000),]
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
mendota_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Bacteroidetes", "TM7", "Chloroflexi", "Cryptophyta", "Cyanobacteria", "Deinococcus-Thermus", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Unclassified", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Tenericutes", "Verrucomicrobia", "Viruses", "Unclassified")
unclassified <- mendota_phyla[which(mendota_phyla$Taxonomy == "Unclassified"), ]
mendota_phyla <- mendota_phyla[which(mendota_phyla$Taxonomy != "Unclassified"), ]
mendota_phyla <- rbind(mendota_phyla, c("Unclassified", sum(unclassified$Sums)))
mendota_phyla$Sums <- as.numeric(mendota_phyla$Sums)
mendota_phyla$Taxonomy <- factor(mendota_phyla$Taxonomy, levels = mendota_phyla$Taxonomy[order(mendota_phyla$Sums, decreasing = T)])
mendota_phyla$Type <- c("Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae",  "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Viruses", "Unclassified")
p <- ggplot(mendota_phyla, aes(x = Taxonomy, y = Sums, fill = Type)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1)) + scale_fill_brewer(palette = "Set2") + labs(x = "", y = "Read Counts", title = "Lake Mendota Metatranscriptomes")
head(mnorm)
mnorm$variable <- gsub(".nonrRNA", "", mnorm$variable)
mnorm$Timepoint <- metadata$Timepoint[match(mnorm$variable, metadata$Sample)]
head(mnorm)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = mnorm, mean)
wide_mnorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_mnorm) <- wide_mnorm$Taxonomy
wide_mnorm <- wide_mnorm[, 2:dim(wide_mnorm)[2]]
wide_mnorm <- wide_mnorm[which(rowSums(wide_mnorm) > 3000),]
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
mendota_phyla
mnorm$Taxonomy <- gsub("Heterokonta,Bacillariophyceae,Naviculales,Phaeodactylaceae,Phaeodactylum,tricornutum", "Heterokonta", mnorm$Taxonomy)
mnorm$Taxonomy <- gsub("Heterokonta,Ochrophyta,Eustigmataphyceae,Eustigmataceae,Nannochloropsis,gaditana", "Heterokonta", mnorm$Taxonomy)
averaged_tax <- aggregate(value ~ Taxonomy + Timepoint, data = mnorm, mean)
wide_mnorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_mnorm) <- wide_mnorm$Taxonomy
wide_mnorm <- wide_mnorm[, 2:dim(wide_mnorm)[2]]
wide_mnorm <- wide_mnorm[which(rowSums(wide_mnorm) > 3000),]
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
wide_mnorm <- reshape(averaged_tax, idvar = "Taxonomy", timevar = "Timepoint", direction = "wide")
rownames(wide_mnorm) <- wide_mnorm$Taxonomy
wide_mnorm <- wide_mnorm[, 2:dim(wide_mnorm)[2]]
wide_mnorm <- wide_mnorm[which(rowSums(wide_mnorm) > 3000),]
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
mendota_phyla
mendota_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Cryptophyta", "Ciliophora", "Crenarchaeota", "Cyanobacteria", "Deinococcus-Thermus", "Elusimicrobia", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Tenericutes", "Unclassified", "Verrucomicrobia", "Viruses")
unclassified <- mendota_phyla[which(mendota_phyla$Taxonomy == "Unclassified"), ]
mendota_phyla <- mendota_phyla[which(mendota_phyla$Taxonomy != "Unclassified"), ]
mendota_phyla <- rbind(mendota_phyla, c("Unclassified", sum(unclassified$Sums)))
mendota_phyla$Sums <- as.numeric(mendota_phyla$Sums)
mendota_phyla$Taxonomy <- factor(mendota_phyla$Taxonomy, levels = mendota_phyla$Taxonomy[order(mendota_phyla$Sums, decreasing = T)])
mendota_phyla$Type <- c("Unclassified", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Algae", "Protists", "Archaea", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Algae", "Bacteria", "Internal Standard", "Unclassified", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Unclassified", "Bacteria", "Viruses")
mendota_phyla
mendota_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Cryptophyta", "Ciliophora", "Crenarchaeota", "Cyanobacteria", "Deinococcus-Thermus", "Elusimicrobia", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Tenericutes", "Unclassified", "Verrucomicrobia", "Viruses", "Unclassified")
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
mendota_phyla
c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Ciliophora", "Crenarchaeota", "Cyanobacteria", "Deinococcus-Thermus", "Elusimicrobia", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Tenericutes", "Unclassified", "Verrucomicrobia", "Viruses")
mendota_phyla$Taxonomy
mendota_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Ciliophora", "Crenarchaeota", "Cryptophyta", "Cyanobacteria", "Deinococcus-Thermus", "Elusimicrobia", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Tenericutes", "Unclassified", "Verrucomicrobia", "Viruses")
mendota_phyla$Type <- c("Unclassified", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Protists", "Archaea", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Algae", "Bacteria", "Internal Standard", "Unclassified", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Unclassified", "Bacteria", "Viruses")
ggplot(mendota_phyla, aes(x = Taxonomy, y = Sums, fill = Type)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1)) + scale_fill_brewer(palette = "Set2") + labs(x = "", y = "Read Counts", title = "Lake Mendota Metatranscriptomes")
mendota_phyla <- data.frame(Taxonomy = rownames(wide_mnorm), Sums = rowSums(wide_mnorm))
mendota_phyla$Taxonomy <- c("Unclassified", "Acidobacteria", "Actinobacteria", "Armatimonadetes", "Bacteroidetes", "TM7", "Chlorobi", "Chloroflexi", "Chlorophyta", "Ciliophora", "Crenarchaeota", "Cryptophyta", "Cyanobacteria", "Deinococcus-Thermus", "Elusimicrobia", "Firmicutes", "Gemmatimonadetes", "Haptophyta", "Heterokonta", "Ignavibacteria", "standard", "Unclassified", "Planctomycetes", "Proteobacteria", "Spirochaetes", "Tenericutes", "Unclassified", "Verrucomicrobia", "Viruses")
unclassified <- mendota_phyla[which(mendota_phyla$Taxonomy == "Unclassified"), ]
mendota_phyla <- mendota_phyla[which(mendota_phyla$Taxonomy != "Unclassified"), ]
mendota_phyla <- rbind(mendota_phyla, c("Unclassified", sum(unclassified$Sums)))
mendota_phyla$Sums <- as.numeric(mendota_phyla$Sums)
mendota_phyla$Taxonomy <- factor(mendota_phyla$Taxonomy, levels = mendota_phyla$Taxonomy[order(mendota_phyla$Sums, decreasing = T)])
mendota_phyla <- mendota_phyla[which(mendota$phyla$Taxonomy != "standard"), ]
mendota_phyla <- mendota_phyla[which(mendota_phyla$Taxonomy != "standard"), ]
mendota_phyla
mendota_phyla$Type <- c("Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Protists", "Archaea", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Algae", "Bacteria", "Unclassified", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Viruses", "Unclassified")
mendota_phyla$Type <- c("Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Protists", "Archaea", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Algae", "Algae", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Bacteria", "Viruses", "Unclassified")
ggplot(mendota_phyla, aes(x = Taxonomy, y = Sums, fill = Type)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 90, vjust = 0, hjust = 1)) + scale_fill_brewer(palette = "Set2") + labs(x = "", y = "Read Counts", title = "Lake Mendota Metatranscriptomes")
