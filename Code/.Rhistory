table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
#Sum by function and lake, then divide by number of metagenomes from each lake
#First combine categories that are variations of the same thing
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("methane_monooxygenase", "methane_ammonia_monooxygenase", table2keep$annotations)
table2keep$annotations <- gsub("NDMA-dependent_methanol_dehydrogenase", "methanol_dehydrogenase", table2keep$annotations)
marker_sums <- aggregate(value ~ lake + annotations, table2keep, sum)
marker_sums$value[which(marker_sums$lake == "ME_epi")] <- marker_sums$value[which(marker_sums$lake == "ME_epi")]/length(which(lakekey$site == "ME_epi"))
marker_sums$value[which(marker_sums$lake == "TB_epi")] <- marker_sums$value[which(marker_sums$lake == "TB_epi")]/length(which(lakekey$site == "TB_epi"))
marker_sums$value[which(marker_sums$lake == "TB_hypo")] <- marker_sums$value[which(marker_sums$lake == "TB_hypo")]/length(which(lakekey$site == "TB_hypo"))
# Remove categories that are too low in abundance to see on the plot
marker_sums <- marker_sums[which(marker_sums$annotations != "soluble_methane_ammonia_monooxygenase"), ]
marker_sums <- marker_sums[which(marker_sums$annotations != "methylamine_dehydrogenase"), ]
# Remove underscore separators and use factors to order properly
marker_sums$annotations <- gsub("_", " ", marker_sums$annotations)
marker_sums$annotations <- factor(marker_sums$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
head(marker_sums)
head(table2keep)
# Use Kruskal-Wallis Test to look for significant differences in amounts between lakes
genes <- c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
i=1
gene <- genes[i]
genetable <- table2keep[which(table2keep$annotations == gene),]
head(genetable)
rm(genetable)
MEgenetable <- table2keep[which(table2keep$annotations == gene & table2keep$lake == "ME_epi"),]
head(MEgenetable)
MEgenetable <- aggregate(value ~ variable, MEgenetable, sum)
head(MEgenetable)
TEgenetable <- table2keep[which(table2keep$annotations == gene & table2keep$lake == "TB_epi"),]
THgenetable <- table2keep[which(table2keep$annotations == gene & table2keep$lake == "TB_hypo"),]
TEgenetable <- aggregate(value ~ variable, TEgenetable, sum)
THgenetable <- aggregate(value ~ variable, THgenetable, sum)
input <- list(MEgenetable$value, TEgenetable$value, THgenetable$value)
kruskal.test(input)
wilcox.test(MEgenetable$value, TEgenetable$value)
wilcox.test(THgenetable$value, TEgenetable$value)
ggplot(data = marker_sums, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Mean Hits per Metagenome") + coord_flip()
head(table2keep)
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
head(plot.boxes)
ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot()
p10
ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Mean Hits per Metagenome") + coord_flip()
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide quinone reductase" | plot.boxes$annotations == "sulfate adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide quinone reductase" & plot.boxes$annotations != "sulfate adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
unique(plot.boxes$annotations)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide_quinone_reductase" | plot.boxes$annotations == "sulfate_adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide_quinone_reductase" & plot.boxes$annotations != "sulfate_adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
table <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/marker_gene_table.txt", header = T, row.names = 1)
lakekey <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
lakerow <- as.character(lakekey$site[match(colnames(table), as.character(lakekey$sample))])
epilefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/marker_genes_LDA_significance.csv", header = T)
TBlefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/TBmarker_genes_LDA_significance.csv", header = T)
genedata <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metabolic_gene_info.txt", fill = TRUE)
# for my selected marker genes, get the number of hits of each one by lake-layer
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("methylamine", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("ammonia_monooxygenase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
#Sum by function and lake, then divide by number of metagenomes from each lake
#First combine categories that are variations of the same thing
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("methane_monooxygenase", "methane_ammonia_monooxygenase", table2keep$annotations)
table2keep$annotations <- gsub("NDMA-dependent_methanol_dehydrogenase", "methanol_dehydrogenase", table2keep$annotations)
# marker_sums <- aggregate(value ~ lake + annotations, table2keep, sum)
# marker_sums$value[which(marker_sums$lake == "ME_epi")] <- marker_sums$value[which(marker_sums$lake == "ME_epi")]/length(which(lakekey$site == "ME_epi"))
# marker_sums$value[which(marker_sums$lake == "TB_epi")] <- marker_sums$value[which(marker_sums$lake == "TB_epi")]/length(which(lakekey$site == "TB_epi"))
# marker_sums$value[which(marker_sums$lake == "TB_hypo")] <- marker_sums$value[which(marker_sums$lake == "TB_hypo")]/length(which(lakekey$site == "TB_hypo"))
#
# # Remove categories that are too low in abundance to see on the plot
# marker_sums <- marker_sums[which(marker_sums$annotations != "soluble_methane_ammonia_monooxygenase"), ]
# marker_sums <- marker_sums[which(marker_sums$annotations != "methylamine_dehydrogenase"), ]
#
# # Remove underscore separators and use factors to order properly
# marker_sums$annotations <- gsub("_", " ", marker_sums$annotations)
# marker_sums$annotations <- factor(marker_sums$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide_quinone_reductase" | plot.boxes$annotations == "sulfate_adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide_quinone_reductase" & plot.boxes$annotations != "sulfate_adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(4, 1.75))
fig4
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4))
fig4
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "h")
fig4
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
fig4
table <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/marker_gene_table.txt", header = T, row.names = 1)
lakekey <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
lakerow <- as.character(lakekey$site[match(colnames(table), as.character(lakekey$sample))])
epilefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/marker_genes_LDA_significance.csv", header = T)
TBlefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/TBmarker_genes_LDA_significance.csv", header = T)
genedata <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metabolic_gene_info.txt", fill = TRUE)
# for my selected marker genes, get the number of hits of each one by lake-layer
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
#Sum by function and lake, then divide by number of metagenomes from each lake
#First combine categories that are variations of the same thing
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
# marker_sums <- aggregate(value ~ lake + annotations, table2keep, sum)
# marker_sums$value[which(marker_sums$lake == "ME_epi")] <- marker_sums$value[which(marker_sums$lake == "ME_epi")]/length(which(lakekey$site == "ME_epi"))
# marker_sums$value[which(marker_sums$lake == "TB_epi")] <- marker_sums$value[which(marker_sums$lake == "TB_epi")]/length(which(lakekey$site == "TB_epi"))
# marker_sums$value[which(marker_sums$lake == "TB_hypo")] <- marker_sums$value[which(marker_sums$lake == "TB_hypo")]/length(which(lakekey$site == "TB_hypo"))
#
# # Remove categories that are too low in abundance to see on the plot
# marker_sums <- marker_sums[which(marker_sums$annotations != "soluble_methane_ammonia_monooxygenase"), ]
# marker_sums <- marker_sums[which(marker_sums$annotations != "methylamine_dehydrogenase"), ]
#
# # Remove underscore separators and use factors to order properly
# marker_sums$annotations <- gsub("_", " ", marker_sums$annotations)
# marker_sums$annotations <- factor(marker_sums$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide_quinone_reductase" | plot.boxes$annotations == "sulfate_adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide_quinone_reductase" & plot.boxes$annotations != "sulfate_adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
fig4
table2keep$annotations <- factor(table2keep$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide_quinone_reductase" | plot.boxes$annotations == "sulfate_adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide_quinone_reductase" & plot.boxes$annotations != "sulfate_adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
fig4
table <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/marker_gene_table.txt", header = T, row.names = 1)
lakekey <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
lakerow <- as.character(lakekey$site[match(colnames(table), as.character(lakekey$sample))])
epilefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/marker_genes_LDA_significance.csv", header = T)
TBlefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/TBmarker_genes_LDA_significance.csv", header = T)
genedata <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metabolic_gene_info.txt", fill = TRUE)
# for my selected marker genes, get the number of hits of each one by lake-layer
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
#Sum by function and lake, then divide by number of metagenomes from each lake
#First combine categories that are variations of the same thing
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("_", " ", table2keep$annotations)
table2keep$annotations <- factor(table2keep$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
# marker_sums <- aggregate(value ~ lake + annotations, table2keep, sum)
# marker_sums$value[which(marker_sums$lake == "ME_epi")] <- marker_sums$value[which(marker_sums$lake == "ME_epi")]/length(which(lakekey$site == "ME_epi"))
# marker_sums$value[which(marker_sums$lake == "TB_epi")] <- marker_sums$value[which(marker_sums$lake == "TB_epi")]/length(which(lakekey$site == "TB_epi"))
# marker_sums$value[which(marker_sums$lake == "TB_hypo")] <- marker_sums$value[which(marker_sums$lake == "TB_hypo")]/length(which(lakekey$site == "TB_hypo"))
#
# # Remove categories that are too low in abundance to see on the plot
# marker_sums <- marker_sums[which(marker_sums$annotations != "soluble_methane_ammonia_monooxygenase"), ]
# marker_sums <- marker_sums[which(marker_sums$annotations != "methylamine_dehydrogenase"), ]
#
# # Remove underscore separators and use factors to order properly
# marker_sums$annotations <- gsub("_", " ", marker_sums$annotations)
# marker_sums$annotations <- factor(marker_sums$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide_quinone_reductase" | plot.boxes$annotations == "sulfate_adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide_quinone_reductase" & plot.boxes$annotations != "sulfate_adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
fig4
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide quinone reductase" | plot.boxes$annotations == "sulfate adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide quinone reductase" & plot.boxes$annotations != "sulfate adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#FF0000", "#8EEB00", "#00A287")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
fig4 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
fig4
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/marker_gene_hits.pdf", fig4, base_height = 3.5, base_aspect_ratio = 2)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/marker_gene_hits.pdf", fig4, base_height = 5, base_aspect_ratio = 1.5)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/marker_gene_hits.pdf", fig4, base_height = 8, base_aspect_ratio = 1)
# Use Kruskal-Wallis Test to look for significant differences in amounts between lakes
genes <- c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
i=1
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
head(genetable)
pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", pairwise = T)
pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", pairwise = F)
pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = T)
pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
str(x)
print(gene, x$p.value)
x$p.value
print(gene, colnames(stat.table)[1], rownames(stat.table)[1], stat.table[1,1], colnames(stat.table)[2], rownames(stat.table)[2], stat.table[2,2])
stat.table <- x$pvalue
print(gene, colnames(stat.table)[1], rownames(stat.table)[1], stat.table[1,1], colnames(stat.table)[2], rownames(stat.table)[2], stat.table[2,2])
print(colnames(stat.table))
colnames(stat.table)
str(stat.table)
stat.table
stat.table <- x$pvalue
stat.table
stat.table <- x$p.value
print(gene, colnames(stat.table)[1], rownames(stat.table)[1], stat.table[1,1], colnames(stat.table)[2], rownames(stat.table)[2], stat.table[2,2])
gene
colnames(stat.table)[1]
rownames(stat.table)[1]
stat.table[1,1]
colnames(stat.table)[2]
rownames(stat.table)[2]
stat.table[2,2]
paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], stat.table[1,1], colnames(stat.table)[2], rownames(stat.table)[2], stat.table[2,2])
paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], stat.table[2,2])
paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2]), 2)
paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2),)
paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
}
i
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
i
genetable
gene
# Use Kruskal-Wallis Test to look for significant differences in amounts between lakes
genes <- c("rubisco", "citrate lyase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
#Load data
table <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Pathway_analysis/consolidated_pathway_data.csv", header = T)
metadata <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/MAG_information.csv")
head(metadata)
# Fake taxonomy data so that Proteobacterial classes function as phyla
metadata$Taxonomy <- gsub("Proteobacteria;", "", metadata$Taxonomy)
phylum <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 1)
class<- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 2)
order <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 3)
colnames(table) <- gsub("X", "", colnames(table))
table <- table[1:61,]
for(i in 3:dim(table)[2]){
column <- table[,i]
column[which(is.na(column) == T)] <- 0
table[,i] <- column
}
rTCA <- table[2,3:196]
rTCA[which(rTCA < 100)] <- 0
table[2,3:196] <- rTCA
table$Pathway <- gsub("(*)", "", table$Pathway)
table <- table[which(table$Pathway != "Nitrogen fixation, Fe-only"), ]
table$Pathway[which(table$Pathway == "Nitrogen fixation, Mo-Fe")] <- "Nitrogen fixation"
ME.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Mendota")])) == F)]
ME.MAGs$Pathways <- make.unique(table$Pathway)
ME.long <- melt(ME.MAGs)
ME.long$Pathways <- factor(ME.long$Pathways, levels = table$Pathway)
ME.long$variable <- factor(ME.long$variable, levels = colnames(table))
ME.long$Taxonomy <- phylum[match(ME.long$variable, metadata$IMG_OID)]
ME.long$Taxonomy[which(ME.long$Taxonomy == "[Blank]")] <- "Unclassified"
ME.long <- ME.long[which(is.na(ME.long$Pathways) == F), ]
ME.agg <- aggregate(value ~ Pathways + Taxonomy, ME.long, mean)
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
ME.heatmap
head(ME.agg)
# Don't plot unclassified groups
ME.agg <- ME.agg[which(ME.agg$Taxonomy != "Unclassified")]
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
# Don't plot unclassified groups
ME.agg <- ME.agg[which(ME.agg$Taxonomy != "Unclassified"),]
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
ME.heatmap
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/ME.heatmap.pdf", ME.heatmap, base_height = 7.5, base_aspect_ratio = 0.75)
TE.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Epilimnion")])) == F)]
TE.MAGs$Pathways <- make.unique(table$Pathway)
TE.long <- melt(TE.MAGs)
TE.long$Pathways <- factor(TE.long$Pathways, levels = table$Pathway)
TE.long$variable <- factor(TE.long$variable, levels = colnames(table))
TE.long$Taxonomy <- phylum[match(TE.long$variable, metadata$IMG_OID)]
TE.long$Taxonomy[which(TE.long$Taxonomy == "[Blank]")] <- "Unclassified"
TE.long <- TE.long[which(is.na(TE.long$Pathways) == F), ]
TE.agg <- aggregate(value ~ Pathways + Taxonomy, TE.long, mean)
TE.agg$value[which(TE.agg$Pathways == "Calvin Cycle" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg$value[which(TE.agg$Pathways == "Dissimilatory sulfate reduction" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg <- TE.agg[which(TE.agg$Taxonomy != "Unclassified"),]
TE.heatmap <- ggplot(data = TE.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#8EEB00", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.5, base_aspect_ratio = 0.67)
TH.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Hypolimnion")])) == F)]
TH.MAGs$Pathways <- make.unique(table$Pathway)
TH.long <- melt(TH.MAGs)
TH.long$Pathways <- factor(TH.long$Pathways, levels = table$Pathway)
TH.long$variable <- factor(TH.long$variable, levels = colnames(table))
TH.long$Taxonomy <- phylum[match(TH.long$variable, metadata$IMG_OID)]
TH.long$Taxonomy[which(TH.long$Taxonomy == "[Blank]")] <- "Unclassified"
TH.long <- TH.long[which(is.na(TH.long$Pathways) == F), ]
TH.agg <- aggregate(value ~ Pathways + Taxonomy, TH.long, mean)
TH.agg$value[which(TH.agg$Pathways == "Dissimilatory sulfate reduction" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg$value[which(TH.agg$Pathways == "Calvin Cycle" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg <- TH.agg[which(TH.agg$Taxonomy != "Unclassified"),]
TH.heatmap <- ggplot(data = TH.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#00A287", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TH.heatmap.pdf", TH.heatmap, base_height = 7.5, base_aspect_ratio = .73)
table <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Pathway_analysis/consolidated_pathway_data.csv", header = T)
metadata <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/MAG_information.csv")
# Fake taxonomy data so that Proteobacterial classes function as phyla
metadata$Taxonomy <- gsub("Proteobacteria;", "", metadata$Taxonomy)
#make a long format table - for each phylum and lake, count how many times each pathway appears.
phylum <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 1)
class<- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 2)
order <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 3)
colnames(table) <- gsub("X", "", colnames(table))
table <- table[1:61,]
for(i in 3:dim(table)[2]){
column <- table[,i]
column[which(is.na(column) == T)] <- 0
table[,i] <- column
}
rTCA <- table[2,3:196]
rTCA[which(rTCA < 100)] <- 0
table[2,3:196] <- rTCA
table$Pathway <- gsub("(*)", "", table$Pathway)
table <- table[which(table$Pathway != "Nitrogen fixation, Fe-only"), ]
table$Pathway[which(table$Pathway == "Nitrogen fixation, Mo-Fe")] <- "Nitrogen fixation"
ME.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Mendota")])) == F)]
ME.MAGs$Pathways <- make.unique(table$Pathway)
ME.long <- melt(ME.MAGs)
ME.long$Pathways <- factor(ME.long$Pathways, levels = table$Pathway)
ME.long$variable <- factor(ME.long$variable, levels = colnames(table))
ME.long$Taxonomy <- phylum[match(ME.long$variable, metadata$IMG_OID)]
ME.long$Taxonomy[which(ME.long$Taxonomy == "[Blank]")] <- "Unclassified"
ME.long <- ME.long[which(is.na(ME.long$Pathways) == F), ]
ME.agg <- aggregate(value ~ Pathways + Taxonomy, ME.long, mean)
# Don't plot unclassified groups
ME.agg <- ME.agg[which(ME.agg$Taxonomy != "Unclassified"),]
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/ME.heatmap.pdf", ME.heatmap, base_height = 7.75, base_aspect_ratio = 0.73)
TE.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Epilimnion")])) == F)]
TE.MAGs$Pathways <- make.unique(table$Pathway)
TE.long <- melt(TE.MAGs)
TE.long$Pathways <- factor(TE.long$Pathways, levels = table$Pathway)
TE.long$variable <- factor(TE.long$variable, levels = colnames(table))
TE.long$Taxonomy <- phylum[match(TE.long$variable, metadata$IMG_OID)]
TE.long$Taxonomy[which(TE.long$Taxonomy == "[Blank]")] <- "Unclassified"
TE.long <- TE.long[which(is.na(TE.long$Pathways) == F), ]
TE.agg <- aggregate(value ~ Pathways + Taxonomy, TE.long, mean)
TE.agg$value[which(TE.agg$Pathways == "Calvin Cycle" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg$value[which(TE.agg$Pathways == "Dissimilatory sulfate reduction" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg <- TE.agg[which(TE.agg$Taxonomy != "Unclassified"),]
TE.heatmap <- ggplot(data = TE.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#8EEB00", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.75)
TH.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Hypolimnion")])) == F)]
TH.MAGs$Pathways <- make.unique(table$Pathway)
TH.long <- melt(TH.MAGs)
TH.long$Pathways <- factor(TH.long$Pathways, levels = table$Pathway)
TH.long$variable <- factor(TH.long$variable, levels = colnames(table))
TH.long$Taxonomy <- phylum[match(TH.long$variable, metadata$IMG_OID)]
TH.long$Taxonomy[which(TH.long$Taxonomy == "[Blank]")] <- "Unclassified"
TH.long <- TH.long[which(is.na(TH.long$Pathways) == F), ]
TH.agg <- aggregate(value ~ Pathways + Taxonomy, TH.long, mean)
TH.agg$value[which(TH.agg$Pathways == "Dissimilatory sulfate reduction" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg$value[which(TH.agg$Pathways == "Calvin Cycle" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg <- TH.agg[which(TH.agg$Taxonomy != "Unclassified"),]
TH.heatmap <- ggplot(data = TH.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#00A287", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TH.heatmap.pdf", TH.heatmap, base_height = 7.75, base_aspect_ratio = .73)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.73)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.70)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.67)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.68)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.73)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.70)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.79)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.69)
citation("cowplot")
library(ggplot2)
library(cowplot)
library(reshape2)
library(ape)
table <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/marker_gene_table.txt", header = T, row.names = 1)
lakekey <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
lakerow <- as.character(lakekey$site[match(colnames(table), as.character(lakekey$sample))])
# epilefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/marker_genes_LDA_significance.csv", header = T)
# TBlefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/TBmarker_genes_LDA_significance.csv", header = T)
genedata <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metabolic_gene_info.txt", fill = TRUE)
# Normalize gene hits by metagenome size
Mendota_raw_input <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/Mendota_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TE_raw_input <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/TE_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TH_raw_input <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/TH_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
all_sizes <- rbind(Mendota_raw_input, TE_raw_input, TH_raw_input)
all_sizes <- all_sizes[,c(2, 4)]
all_sizes <- all_sizes[which(duplicated(all_sizes) == F), ]
size_vector <- all_sizes$V4[match(colnames(table), all_sizes$V2)]
table <- table[, which(is.na(size_vector) == F)]
size_vector <- size_vector[which(is.na(size_vector) == F)]
table <- sweep(table, 2, size_vector, "/")
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("_", " ", table2keep$annotations)
table2keep$annotations <- factor(table2keep$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
# Use Wilcoxon Rank Sum Test to look for significant differences in distributions between lakes
genes <- c("rubisco", "citrate lyase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
x <- readRDS(file = file.choose())
str(x)
unique(x$phylum$phylum)
otu_table <- x$seqID
str(otu_table)
otu_table[1:5, 1:5]
otu_table[1:10, 1:10]
otu_table2 <- otu_table[,8:97]
colnames(otu_table2)
