item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
#Load data
table <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Pathway_analysis/consolidated_pathway_data.csv", header = T)
metadata <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/MAG_information.csv")
head(metadata)
# Fake taxonomy data so that Proteobacterial classes function as phyla
metadata$Taxonomy <- gsub("Proteobacteria;", "", metadata$Taxonomy)
phylum <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 1)
class<- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 2)
order <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 3)
colnames(table) <- gsub("X", "", colnames(table))
table <- table[1:61,]
for(i in 3:dim(table)[2]){
column <- table[,i]
column[which(is.na(column) == T)] <- 0
table[,i] <- column
}
rTCA <- table[2,3:196]
rTCA[which(rTCA < 100)] <- 0
table[2,3:196] <- rTCA
table$Pathway <- gsub("(*)", "", table$Pathway)
table <- table[which(table$Pathway != "Nitrogen fixation, Fe-only"), ]
table$Pathway[which(table$Pathway == "Nitrogen fixation, Mo-Fe")] <- "Nitrogen fixation"
ME.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Mendota")])) == F)]
ME.MAGs$Pathways <- make.unique(table$Pathway)
ME.long <- melt(ME.MAGs)
ME.long$Pathways <- factor(ME.long$Pathways, levels = table$Pathway)
ME.long$variable <- factor(ME.long$variable, levels = colnames(table))
ME.long$Taxonomy <- phylum[match(ME.long$variable, metadata$IMG_OID)]
ME.long$Taxonomy[which(ME.long$Taxonomy == "[Blank]")] <- "Unclassified"
ME.long <- ME.long[which(is.na(ME.long$Pathways) == F), ]
ME.agg <- aggregate(value ~ Pathways + Taxonomy, ME.long, mean)
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
ME.heatmap
head(ME.agg)
# Don't plot unclassified groups
ME.agg <- ME.agg[which(ME.agg$Taxonomy != "Unclassified")]
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
# Don't plot unclassified groups
ME.agg <- ME.agg[which(ME.agg$Taxonomy != "Unclassified"),]
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
ME.heatmap
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/ME.heatmap.pdf", ME.heatmap, base_height = 7.5, base_aspect_ratio = 0.75)
TE.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Epilimnion")])) == F)]
TE.MAGs$Pathways <- make.unique(table$Pathway)
TE.long <- melt(TE.MAGs)
TE.long$Pathways <- factor(TE.long$Pathways, levels = table$Pathway)
TE.long$variable <- factor(TE.long$variable, levels = colnames(table))
TE.long$Taxonomy <- phylum[match(TE.long$variable, metadata$IMG_OID)]
TE.long$Taxonomy[which(TE.long$Taxonomy == "[Blank]")] <- "Unclassified"
TE.long <- TE.long[which(is.na(TE.long$Pathways) == F), ]
TE.agg <- aggregate(value ~ Pathways + Taxonomy, TE.long, mean)
TE.agg$value[which(TE.agg$Pathways == "Calvin Cycle" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg$value[which(TE.agg$Pathways == "Dissimilatory sulfate reduction" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg <- TE.agg[which(TE.agg$Taxonomy != "Unclassified"),]
TE.heatmap <- ggplot(data = TE.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#8EEB00", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.5, base_aspect_ratio = 0.67)
TH.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Hypolimnion")])) == F)]
TH.MAGs$Pathways <- make.unique(table$Pathway)
TH.long <- melt(TH.MAGs)
TH.long$Pathways <- factor(TH.long$Pathways, levels = table$Pathway)
TH.long$variable <- factor(TH.long$variable, levels = colnames(table))
TH.long$Taxonomy <- phylum[match(TH.long$variable, metadata$IMG_OID)]
TH.long$Taxonomy[which(TH.long$Taxonomy == "[Blank]")] <- "Unclassified"
TH.long <- TH.long[which(is.na(TH.long$Pathways) == F), ]
TH.agg <- aggregate(value ~ Pathways + Taxonomy, TH.long, mean)
TH.agg$value[which(TH.agg$Pathways == "Dissimilatory sulfate reduction" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg$value[which(TH.agg$Pathways == "Calvin Cycle" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg <- TH.agg[which(TH.agg$Taxonomy != "Unclassified"),]
TH.heatmap <- ggplot(data = TH.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#00A287", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TH.heatmap.pdf", TH.heatmap, base_height = 7.5, base_aspect_ratio = .73)
table <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Pathway_analysis/consolidated_pathway_data.csv", header = T)
metadata <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/MAG_information.csv")
# Fake taxonomy data so that Proteobacterial classes function as phyla
metadata$Taxonomy <- gsub("Proteobacteria;", "", metadata$Taxonomy)
#make a long format table - for each phylum and lake, count how many times each pathway appears.
phylum <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 1)
class<- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 2)
order <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 3)
colnames(table) <- gsub("X", "", colnames(table))
table <- table[1:61,]
for(i in 3:dim(table)[2]){
column <- table[,i]
column[which(is.na(column) == T)] <- 0
table[,i] <- column
}
rTCA <- table[2,3:196]
rTCA[which(rTCA < 100)] <- 0
table[2,3:196] <- rTCA
table$Pathway <- gsub("(*)", "", table$Pathway)
table <- table[which(table$Pathway != "Nitrogen fixation, Fe-only"), ]
table$Pathway[which(table$Pathway == "Nitrogen fixation, Mo-Fe")] <- "Nitrogen fixation"
ME.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Mendota")])) == F)]
ME.MAGs$Pathways <- make.unique(table$Pathway)
ME.long <- melt(ME.MAGs)
ME.long$Pathways <- factor(ME.long$Pathways, levels = table$Pathway)
ME.long$variable <- factor(ME.long$variable, levels = colnames(table))
ME.long$Taxonomy <- phylum[match(ME.long$variable, metadata$IMG_OID)]
ME.long$Taxonomy[which(ME.long$Taxonomy == "[Blank]")] <- "Unclassified"
ME.long <- ME.long[which(is.na(ME.long$Pathways) == F), ]
ME.agg <- aggregate(value ~ Pathways + Taxonomy, ME.long, mean)
# Don't plot unclassified groups
ME.agg <- ME.agg[which(ME.agg$Taxonomy != "Unclassified"),]
ME.heatmap <- ggplot(data = ME.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#FF0000", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/ME.heatmap.pdf", ME.heatmap, base_height = 7.75, base_aspect_ratio = 0.73)
TE.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Epilimnion")])) == F)]
TE.MAGs$Pathways <- make.unique(table$Pathway)
TE.long <- melt(TE.MAGs)
TE.long$Pathways <- factor(TE.long$Pathways, levels = table$Pathway)
TE.long$variable <- factor(TE.long$variable, levels = colnames(table))
TE.long$Taxonomy <- phylum[match(TE.long$variable, metadata$IMG_OID)]
TE.long$Taxonomy[which(TE.long$Taxonomy == "[Blank]")] <- "Unclassified"
TE.long <- TE.long[which(is.na(TE.long$Pathways) == F), ]
TE.agg <- aggregate(value ~ Pathways + Taxonomy, TE.long, mean)
TE.agg$value[which(TE.agg$Pathways == "Calvin Cycle" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg$value[which(TE.agg$Pathways == "Dissimilatory sulfate reduction" & TE.agg$Taxonomy == "Chlorobi")] <- 0
TE.agg <- TE.agg[which(TE.agg$Taxonomy != "Unclassified"),]
TE.heatmap <- ggplot(data = TE.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#8EEB00", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.75)
TH.MAGs <- table[,which(is.na(match(colnames(table), metadata$IMG_OID[which(metadata$Lake == "Trout Bog Hypolimnion")])) == F)]
TH.MAGs$Pathways <- make.unique(table$Pathway)
TH.long <- melt(TH.MAGs)
TH.long$Pathways <- factor(TH.long$Pathways, levels = table$Pathway)
TH.long$variable <- factor(TH.long$variable, levels = colnames(table))
TH.long$Taxonomy <- phylum[match(TH.long$variable, metadata$IMG_OID)]
TH.long$Taxonomy[which(TH.long$Taxonomy == "[Blank]")] <- "Unclassified"
TH.long <- TH.long[which(is.na(TH.long$Pathways) == F), ]
TH.agg <- aggregate(value ~ Pathways + Taxonomy, TH.long, mean)
TH.agg$value[which(TH.agg$Pathways == "Dissimilatory sulfate reduction" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg$value[which(TH.agg$Pathways == "Calvin Cycle" & TH.agg$Taxonomy == "Chlorobi")] <- 0
TH.agg <- TH.agg[which(TH.agg$Taxonomy != "Unclassified"),]
TH.heatmap <- ggplot(data = TH.agg, aes(y = Pathways, x = Taxonomy, fill = value)) + geom_tile(color = "black") + labs(x = "", y = "") + scale_fill_gradient2(low = "white", high = "#00A287", midpoint = 25) + theme(axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5), axis.text.y = element_text(size = 10))
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TH.heatmap.pdf", TH.heatmap, base_height = 7.75, base_aspect_ratio = .73)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.73)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.70)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.67)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.68)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.73)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.70)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.79)
save_plot("C:/Users/Alex/Desktop/MAGstravaganza/Manuscript_plots/TE.heatmap.pdf", TE.heatmap, base_height = 7.75, base_aspect_ratio = 0.69)
citation("cowplot")
library(ggplot2)
library(cowplot)
library(reshape2)
library(ape)
table <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/marker_gene_table.txt", header = T, row.names = 1)
lakekey <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
lakerow <- as.character(lakekey$site[match(colnames(table), as.character(lakekey$sample))])
# epilefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/marker_genes_LDA_significance.csv", header = T)
# TBlefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/TBmarker_genes_LDA_significance.csv", header = T)
genedata <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/Data_files/metabolic_gene_info.txt", fill = TRUE)
# Normalize gene hits by metagenome size
Mendota_raw_input <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/Mendota_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TE_raw_input <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/TE_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TH_raw_input <- read.table("C:/Users/Alex/Desktop/MAGstravaganza/time_series_mapping/TH_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
all_sizes <- rbind(Mendota_raw_input, TE_raw_input, TH_raw_input)
all_sizes <- all_sizes[,c(2, 4)]
all_sizes <- all_sizes[which(duplicated(all_sizes) == F), ]
size_vector <- all_sizes$V4[match(colnames(table), all_sizes$V2)]
table <- table[, which(is.na(size_vector) == F)]
size_vector <- size_vector[which(is.na(size_vector) == F)]
table <- sweep(table, 2, size_vector, "/")
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("_", " ", table2keep$annotations)
table2keep$annotations <- factor(table2keep$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
# Use Wilcoxon Rank Sum Test to look for significant differences in distributions between lakes
genes <- c("rubisco", "citrate lyase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
x <- readRDS(file = file.choose())
str(x)
unique(x$phylum$phylum)
otu_table <- x$seqID
str(otu_table)
otu_table[1:5, 1:5]
otu_table[1:10, 1:10]
otu_table2 <- otu_table[,8:97]
colnames(otu_table2)
library(ggplot2)
library(cowplot)
library(reshape2)
library(ape)
library(zoo)
############
### Fig 1. Marker gene analysis
# Panel A
# Read in datasets of marker gene counts
table <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Data_files/marker_gene_table.txt", header = T, row.names = 1)
lakekey <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Data_files/metagenome_metadata.csv", header = T)
lakerow <- as.character(lakekey$site[match(colnames(table), as.character(lakekey$sample))])
# epilefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/marker_genes_LDA_significance.csv", header = T)
# TBlefse <- read.csv("C:/Users/Alex/Desktop/MAGstravaganza/Supplemental/TBmarker_genes_LDA_significance.csv", header = T)
genedata <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Data_files/metabolic_gene_info.txt", fill = TRUE)
Mendota_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/Mendota_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TE_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TE_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TH_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TH_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
all_sizes <- rbind(Mendota_raw_input, TE_raw_input, TH_raw_input)
all_sizes <- all_sizes[,c(2, 4)]
all_sizes <- all_sizes[which(duplicated(all_sizes) == F), ]
size_vector <- all_sizes$V4[match(colnames(table), all_sizes$V2)]
table <- table[, which(is.na(size_vector) == F)]
size_vector <- size_vector[which(is.na(size_vector) == F)]
table <- sweep(table, 2, size_vector, "/")
# For my selected marker genes, get the number of hits of each one by lake-layer
genes2keep <- genedata$V1[c(grep("rubisco", genedata$V3), grep("citrate_lyase", genedata$V3), grep("nitrogenase", genedata$V3), grep("Sox", genedata$V3), grep("dissimilatory_sulfite_reductase", genedata$V3), grep("urease", genedata$V3), grep("^sulfite_reductase", genedata$V3), grep("sulfate_adenylyltransferase", genedata$V3), grep("nitrate_reductase", genedata$V3), grep("nitrite_reductase", genedata$V3), grep("nitric_oxide_reductase", genedata$V3), grep("nitrous_oxide_reductase", genedata$V3), grep("sulfide_quinone_reductase", genedata$V3))]
table2keep <- table[match(genes2keep, rownames(table)),]
table2keep$genes <- rownames(table2keep)
table2keep <- melt(table2keep)
table2keep$annotations <- genedata$V3[match(table2keep$genes, genedata$V1)]
table2keep$lake <- as.character(lakekey$site[match(table2keep$variable, as.character(lakekey$sample))])
table2keep <- table2keep[which(is.na(table2keep$lake) == F),]
#Sum by function and lake, then divide by number of metagenomes from each lake
#First combine categories that are variations of the same thing
table2keep$annotations <- gsub("thiosulfohydrolase_SoxB", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("thiosulfate_oxidation_carrier_SoxY", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("sulfite_dehydrogenase_SoxC", "SOX", table2keep$annotations)
table2keep$annotations <- gsub("dissimilatory_sulfite_reductase", "sulfite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("periplasmic_nitrate_reductase", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrate_reductase_cytochrome_c-type", "nitrate_reductase", table2keep$annotations)
table2keep$annotations <- gsub("formate_dependent_cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("cytochrome_c_nitrite_reductase", "nitrite_reductase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_VaFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_MoFe", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("Fe-only_nitrogenase", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("nitrogenase_iron_protein", "nitrogenase", table2keep$annotations)
table2keep$annotations <- gsub("_", " ", table2keep$annotations)
table2keep$annotations <- factor(table2keep$annotations, levels = c("rubisco", "citrate lyase", "methane ammonia monooxygenase", "methanol dehydrogenase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase"))
plot.boxes <- aggregate(value ~ variable + annotations + lake, table2keep, sum)
# plot.boxes1 <- plot.boxes[which(plot.boxes$annotations == "sulfide quinone reductase" | plot.boxes$annotations == "sulfate adenylyltransferase" | plot.boxes$annotations == "SOX"), ]
# plot.boxes2 <- plot.boxes[which(plot.boxes$annotations != "sulfide quinone reductase" & plot.boxes$annotations != "sulfate adenylyltransferase" & plot.boxes$annotations != "SOX"), ]
#
# p1 <- ggplot(data = plot.boxes1, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
# p2 <- ggplot(data = plot.boxes2, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Counts per Metagenome") + coord_flip()
#
# fig1 <- plot_grid(p1, p2, nrow = 2, axis = "l", rel_heights = c(1.75, 4), align = "v")
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = 0, hjust = 0)
fig1
ggdraw(fig1)
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = 0, hjust = 0, vjust = 0)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = 0, hjust = 0, vjust = 0)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = 0, hjust = 0, vjust = 0)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = 0, hjust = 0, vjust = 1)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.00001, hjust = 0, vjust = 1)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -1, hjust = 0, vjust = 1)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.5, hjust = 0, vjust = 1)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.1, hjust = 0, vjust = 1)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.2, hjust = 0, vjust = 1)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.18, hjust = 0, vjust = 1)
ggdraw(fig1)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.18, hjust = 0, vjust = 2)
ggdraw(fig1)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.18, hjust = 0, vjust = 1.5)
ggdraw(fig1)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.18, hjust = 0, vjust = 1.5, fontface = "bold")
ggdraw(fig1)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.25, hjust = 0, vjust = 1.5, fontface = "bold")
ggdraw(fig1)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
# Read in tag data. Note that TB and ME were amplified with different primers (ugh)
mendota_tags <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/Mendota_OTUtable.csv", header = T)
trout_tags <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/TroutBog_OTUtable.csv", header = T)
trout_tags[is.na(trout_tags)] <- 0
#Split Trout Bog data into epi and hypo
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
me_tags <- mendota_tags[, 10:dim(mendota_tags)[2]]
tbe_tags <- trout_tags[,which(substrRight(colnames(trout_tags), 1) == "E")]
tbh_tags <- trout_tags[,which(substrRight(colnames(trout_tags), 1) == "H")]
# Get phylum names - make sure to replace Proteobacteria names with class instead
me_phyla <- as.character(mendota_tags$phylum)
tb_phyla <- as.character(trout_tags$phylum)
me_phyla[which(me_phyla == "p__Proteobacteria")] <- as.character(mendota_tags$class[which(me_phyla == "p__Proteobacteria")])
tb_phyla[which(tb_phyla == "p__Proteobacteria")] <- as.character(trout_tags$class[which(tb_phyla == "p__Proteobacteria")])
me_tags$phyla <- me_phyla
tbe_tags$phyla <- tbh_tags$phyla <- tb_phyla
me_tags <- melt(me_tags)
me_tags <- aggregate(value ~ variable + phyla, me_tags, sum)
me_tags <- reshape(me_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(me_tags) <- me_tags$phyla
me_tags <- me_tags[, 2:dim(me_tags)[2]]
tbe_tags <- melt(tbe_tags)
tbe_tags <- aggregate(value ~ variable + phyla, tbe_tags, sum)
tbe_tags <- reshape(tbe_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(tbe_tags) <- tbe_tags$phyla
tbe_tags <- tbe_tags[, 2:dim(tbe_tags)[2]]
tbh_tags <- melt(tbh_tags)
tbh_tags <- aggregate(value ~ variable + phyla, tbh_tags, sum)
tbh_tags <- reshape(tbh_tags, idvar = "phyla", timevar = "variable", direction = "wide")
rownames(tbh_tags) <- tbh_tags$phyla
tbh_tags <- tbh_tags[, 2:dim(tbh_tags)[2]]
# Get average % of community for each phylum, and switch to long format
mendota_tag_totals <- rowSums(me_tags)/dim(me_tags)[2]
tbe_tag_totals <- rowSums(tbe_tags)/dim(tbe_tags)[2]
tbh_tag_totals <- rowSums(tbh_tags)/dim(tbh_tags)[2]
phylum_names <- c(rownames(me_tags), rownames(tbe_tags), rownames(tbh_tags))
phylum_percents <- c(mendota_tag_totals, tbe_tag_totals, tbh_tag_totals)
phylum_lake <- c(rep("Mendota", length(mendota_tag_totals)), rep("Trout Bog Epilimnion", length(tbe_tag_totals)), rep("Trout Bog Hypolimnion", length(tbh_tag_totals)))
tag_data <- data.frame(phylum_names, phylum_percents, phylum_lake)
tag_data <- tag_data[which(tag_data$phylum_percents >= 1), ]
tag_data$phylum_names <- gsub("c__|p__", "", tag_data$phylum_names)
# Keep phyla and match order to the MAGs plot, then add a few of the most abundant or so
# Which are most abundant?
head(tag_data[order(tag_data$phylum_percents, decreasing = T), ], 50)
tag_data <- tag_data[which(tag_data$phylum_names == "Acidobacteria" | tag_data$phylum_names == "Actinobacteria" | tag_data$phylum_names == "Bacteroidetes" | tag_data$phylum_names == "Chlamydiae" | tag_data$phylum_names == "Chlorobi" | tag_data$phylum_names == "Cyanobacteria" | tag_data$phylum_names == "Ignavibacteria" | tag_data$phylum_names == "Planctomycetes" | tag_data$phylum_names == "Proteobacteria" | tag_data$phylum_names == "Tenericutes" | tag_data$phylum_names == "Verrucomicrobia" | tag_data$phylum_names == "Alphaproteobacteria" | tag_data$phylum_names == "Betaproteobacteria" | tag_data$phylum_names == "Deltaproteobacteria" | tag_data$phylum_names == "Gammaproteobacteria" | tag_data$phylum_names == "Epsilonproteobacteria"),]
# Order the same as the MAGs plot and change names or add zeroes as necessary
tag_data$phylum_names <- as.character(tag_data$phylum_names)
# Add blank rows for things that were in the MAGs but not in 16S
zeroes <- c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0)
zphyla <- c("Chlamydiae", "Chlamydiae", "Chlamydiae", "Tenericutes", "Tenericutes", "Tenericutes", "Ignavibacteria", "Ignavibacteria", "Ignavibacteria", "Acidobacteria", "Acidobacteria", "Acidobacteria", "Epsilonproteobacteria", "Epsilonproteobacteria", "Epsilonproteobacteria")
zlakes <- c("Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion", "Mendota", "Trout Bog Epilimnion", "Trout Bog Hypolimnion")
zdata <- data.frame(zphyla, zeroes, zlakes)
colnames(zdata) <- colnames(tag_data)
tag_data <- rbind(tag_data, zdata)
# Add zero counts for things not in every lake
phyla <- unique(tag_data$phylum_names)
phylum_lakes <- unique(as.character(tag_data$phylum_lake))
for(i in 1:length(phyla)){
for(j in 1:length(phylum_lakes)){
hits <- which(tag_data$phylum_names == phyla[i] & tag_data$phylum_lake == phylum_lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, phylum_lakes[j])
tag_data <- rbind(tag_data, newrow)
}
}
}
tag_data$phylum_percents <- as.numeric(tag_data$phylum_percents)
tag_data$phylum_percents[which(tag_data$phylum_percents > 40)] <- 35
tag_data$phylum_names <- factor(tag_data$phylum_names, levels = c("Acidobacteria", "Actinobacteria", "Alphaproteobacteria", "Bacteroidetes", "Betaproteobacteria", "Chlamydiae", "Chlorobi", "Cyanobacteria", "Deltaproteobacteria", "Epsilonproteobacteria", "Gammaproteobacteria", "Ignavibacteria", "Planctomycetes", "Proteobacteria", "Tenericutes", "Verrucomicrobia"))
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
# Panel B
# Get # of reads assigned to each phylum (mapped MAG) by lake-layer
Mendota_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/Mendota_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
Mendota_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/ME.sampledata.filtered.tsv", sep = "\t", header = T)
Mendota_dates$sample <- as.character(Mendota_dates$sample)
metadata <- read.csv("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Supplemental/MAG_information.csv", header = T)
TE_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TE_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TE_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/tb_epi.sample_data.filtered.txt", header = T, sep = "\t")
TE_dates$sample <- as.character(TE_dates$sample)
TH_raw_input <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/TH_results.txt", colClasses = c("character", "character", "numeric", "numeric"))
TH_dates <- read.table("C:/Users/Goose and Gander/Desktop/MAGstravaganza/time_series_mapping/tb_hyp.sample_data.filtered.txt", header = T, sep = "\t")
TH_dates$sample <- as.character(TH_dates$sample)
# Normalize (reads per kilobase MAG per million reads)
# general form: RPKM =   numReads / ( genomeLength/1000 * totalNumReads/1,000,000 )
# but technically we're not calling it RPKM because that number is meant for genomes, not metagenomes
size_vector <- metadata$Genome_Size[match(Mendota_raw_input$V1, metadata$IMG_OID)]
Mendota_RPKM <- Mendota_raw_input$V3/(size_vector/1000 * Mendota_raw_input$V4/1000000)
ME_results <- data.frame(Mendota_raw_input[,1:2], Mendota_RPKM)
colnames(ME_results) <- c("MAG", "metaG", "RPKM")
ME_results$Date <- as.Date(Mendota_dates$date[match(ME_results$metaG, Mendota_dates$sample)], format = "%m/%d/%y")
ME_results$Julian_Date <- as.numeric(format(ME_results$Date, "%j"))
ME_results <- ME_results[which(is.na(ME_results$Date) == F),]
size_vector <- metadata$Genome_Size[match(TE_raw_input$V1, metadata$IMG_OID)]
TE_RPKM <- TE_raw_input$V3/(size_vector/1000 * TE_raw_input$V4/1000000)
TE_results <- data.frame(TE_raw_input[,1:2], TE_RPKM)
colnames(TE_results) <- c("MAG", "metaG", "RPKM")
TE_results$Date <- as.Date(TE_dates$date[match(TE_results$metaG, TE_dates$sample)], format = "%m/%d/%y")
TE_results$Julian_Date <- as.numeric(format(TE_results$Date, "%j"))
TE_results <- TE_results[which(is.na(TE_results$Date) == F),]
size_vector <- metadata$Genome_Size[match(TH_raw_input$V1, metadata$IMG_OID)]
TH_RPKM <- TH_raw_input$V3/(size_vector/1000 * TH_raw_input$V4/1000000)
TH_results <- data.frame(TH_raw_input[,1:2], TH_RPKM)
colnames(TH_results) <- c("MAG", "metaG", "RPKM")
TH_results$Date <- as.Date(TH_dates$date[match(TH_results$metaG, TH_dates$sample)], format = "%m/%d/%y")
TH_results$Julian_Date <- as.numeric(format(TH_results$Date, "%j"))
TH_results <- TH_results[which(is.na(TH_results$Date) == F),]
# Get taxonomy
metadata$phylum <- sapply(strsplit(as.character(metadata$Taxonomy),";"), `[`, 1)
# Switch Proteobacteria to class
metadata$phylum[which(metadata$phylum == "Proteobacteria")] <- sapply(strsplit(as.character(metadata$Taxonomy[which(metadata$phylum == "Proteobacteria")]),";"), `[`, 2)
ME_results$phylum <- metadata$phylum[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$phylum <- metadata$phylum[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$phylum <- metadata$phylum[match(TH_results$MAG, metadata$IMG_OID)]
ME_results$Taxonomy <- metadata$Taxonomy[match(ME_results$MAG, metadata$IMG_OID)]
TE_results$Taxonomy <- metadata$Taxonomy[match(TE_results$MAG, metadata$IMG_OID)]
TH_results$Taxonomy <- metadata$Taxonomy[match(TH_results$MAG, metadata$IMG_OID)]
# Aggregate by phylum
agg_ME_phyla <- aggregate(RPKM ~ phylum, data = ME_results, mean)
agg_TE_phyla <- aggregate(RPKM ~ phylum, data = TE_results, mean)
agg_TH_phyla <- aggregate(RPKM ~ phylum, data = TH_results, mean)
agg_phyla <- rbind(agg_ME_phyla, agg_TE_phyla, agg_TH_phyla)
agg_phyla$Lake <- c(rep("Mendota", dim(agg_ME_phyla)[1]), rep("Trout Bog Epilimnion", dim(agg_TE_phyla)[1]), rep("Trout Bog Hypolimnion", dim(agg_TH_phyla)[1]))
# Remove unclassified
agg_phyla <- agg_phyla[grep("Blank", agg_phyla$phylum, invert = T), ]
# Add zero counts
phyla <- unique(agg_phyla$phylum)
lakes <- unique(agg_phyla$Lake)
for(i in 1:length(phyla)){
for(j in 1:length(lakes)){
hits <- which(agg_phyla$phylum == phyla[i] & agg_phyla$Lake == lakes[j])
if(length(hits) == 0){
newrow <- c(phyla[i], 0, lakes[j])
agg_phyla <- rbind(agg_phyla, newrow)
}
}
}
agg_phyla$RPKM <- as.numeric(agg_phyla$RPKM)
agg_phyla$RPKM[which(agg_phyla$RPKM > 4)] <- 3.5
panelB <- ggplot(data = agg_phyla, aes(x = phylum, y = RPKM, fill = Lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Normalized Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#1f78b4")) + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 4)) + theme(legend.text=element_text(size=12))
legend <- get_legend(panelA)
panelA <- panelA + theme(legend.position = "none")
panelB <- panelB + theme(legend.position = "none")
# panelA <- ggdraw(panelA) + draw_text("Community Composition by 16S rRNA",
#                       x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                       size = 16)
# panelB <- ggdraw(panelB) + draw_text("Community Composition by MAG Coverage",
#                                      x = 0.01, y = 0.98, hjust = -0.25, vjust = 0.1,
#                                      size = 16)
fig2_nolegend <- plot_grid(panelA, panelB, ncol = 1, align = "h", scale = 0.9)
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
fig2
fig2 <- add_sub(fig2, "Figure 2. How representative are the MAGs of the microbial communities?", x = -0.25, hjust = 0, vjust = 1.5, fontface = "bold")
ggdraw(fig2)
fig2 <- add_sub(fig2, "Figure 2. How representative are the MAGs of the microbial communities?", x = 0, hjust = 0, vjust = 1.5, fontface = "bold")
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
fig2 <- add_sub(fig2, "Figure 2. How representative are the MAGs of the microbial communities?", x = 0, hjust = 0, vjust = 1.5, fontface = "bold")
ggdraw(fig2)
fig2 <- plot_grid(fig2_nolegend, legend, ncol = 2, rel_widths = c(1, .2))
fig2 <- add_sub(fig2, "Figure 2. How representative are the MAGs of the microbial communities?", x = 0, hjust = 0, vjust = 1, fontface = "bold")
ggdraw(fig2)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig2.pdf", fig2, base_height = 8, base_aspect_ratio = 1.6)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#2166ac", "#542788")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
fig1
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.25, hjust = 0, vjust = 1.5, fontface = "bold")
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#2166ac", "#542788"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
panelA
panelA <- ggplot(data = tag_data, aes(x = phylum_names, y = phylum_percents, fill = phylum_lake)) + geom_col(position = "dodge") + theme(axis.text.x = element_text(angle = 45, hjust = 1)) + labs(y = "Mean Percent of Reads", x = NULL) + scale_fill_manual(values = c("#b2df8a", "#a6cee3", "#8856a7"))  + geom_vline(xintercept = c(1.5, 2.5, 3.5, 4.5, 5.5, 6.5, 7.5, 8.5, 9.5, 10.5, 11.5, 12.5, 13.5, 14.5), col='grey', lwd=1, linetype="dotted") + scale_y_continuous(expand = c(0, 0), limits = c(0, 40)) + guides(fill=guide_legend(title="Lake"))
panelA
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#2166ac", "#542788")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
#"#a6cee3"
# "#8856a7"
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.25, hjust = 0, vjust = 1.5, fontface = "bold")
ggdraw(fig1)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
fig1 <- ggplot(data = plot.boxes, aes(x = annotations, y = value, fill = lake)) + geom_boxplot() + scale_fill_manual(values = c("#b2df8a", "#2166ac", "#8856a7")) + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = "none") + labs(x = NULL, y = "Normalized Counts per Metagenome") + coord_flip()
#"#a6cee3"
# "#8856a7"
fig1 <- add_sub(fig1, "Figure 1. Analysis of marker gene abundances reveals differences between lakes and layers.", x = -0.25, hjust = 0, vjust = 1.5, fontface = "bold")
ggdraw(fig1)
save_plot("C:/Users/Goose and Gander/Desktop/MAGstravaganza/Manuscript_plots/fig1.pdf", fig1, base_height = 6, base_aspect_ratio = 1.5)
genes <- c("rubisco", "citrate lyase", "urease", "nitrogenase", "nitrate reductase", "nitrite reductase", "nitric oxide reductase", "nitrous oxide reductase", "SOX", "sulfate adenylyltransferase", "sulfide quinone reductase", "sulfite reductase")
for(i in 1:length(genes)){
gene <- genes[i]
genetable <- plot.boxes[which(plot.boxes$annotations == gene), ]
x <- pairwise.wilcox.test(x = genetable$value, g = genetable$lake, p.adj = "bonf", paired = F)
stat.table <- x$p.value
item1 <- paste(gene, colnames(stat.table)[1], rownames(stat.table)[1], round(stat.table[1,1], 2))
item2 <- paste(gene, colnames(stat.table)[2], rownames(stat.table)[2], round(stat.table[2,2], 2))
print(item1)
print(item2)
}
